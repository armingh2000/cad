$date
   Tue Jun 08 18:04:44 2021
$end
$version
  P.20131013
$end
$timescale
  1ps
$end
$scope module SCC_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module uut $end
$var wire 1 F0 clk $end
$var wire 1 H0 reset $end
$var wire 1 n4 ALUSource $end
$var wire 1 f1 RegisterDestination $end
$var wire 1 N2 MemoryToRegister $end
$var wire 1 p" MemoryRead $end
$var wire 1 b$ Zero $end
$var wire 1 %0 PCSource $end
$var wire 1 G0 RegisterWrite $end
$var wire 1 o" MemoryWrite $end
$var wire 1 Q3 ALUControl [3] $end
$var wire 1 R3 ALUControl [2] $end
$var wire 1 S3 ALUControl [1] $end
$var wire 1 T3 ALUControl [0] $end
$var wire 1 "$ Instruction [31] $end
$var wire 1 #$ Instruction [30] $end
$var wire 1 $$ Instruction [29] $end
$var wire 1 %$ Instruction [28] $end
$var wire 1 &$ Instruction [27] $end
$var wire 1 '$ Instruction [26] $end
$var wire 1 I0 Instruction [25] $end
$var wire 1 J0 Instruction [24] $end
$var wire 1 K0 Instruction [23] $end
$var wire 1 L0 Instruction [22] $end
$var wire 1 M0 Instruction [21] $end
$var wire 1 \1 Instruction [20] $end
$var wire 1 ]1 Instruction [19] $end
$var wire 1 ^1 Instruction [18] $end
$var wire 1 _1 Instruction [17] $end
$var wire 1 `1 Instruction [16] $end
$var wire 1 \3 Instruction [15] $end
$var wire 1 ]3 Instruction [14] $end
$var wire 1 ^3 Instruction [13] $end
$var wire 1 _3 Instruction [12] $end
$var wire 1 `3 Instruction [11] $end
$var wire 1 a3 Instruction [10] $end
$var wire 1 b3 Instruction [9] $end
$var wire 1 c3 Instruction [8] $end
$var wire 1 d3 Instruction [7] $end
$var wire 1 e3 Instruction [6] $end
$var wire 1 f3 Instruction [5] $end
$var wire 1 g3 Instruction [4] $end
$var wire 1 h3 Instruction [3] $end
$var wire 1 i3 Instruction [2] $end
$var wire 1 j3 Instruction [1] $end
$var wire 1 k3 Instruction [0] $end
$var wire 1 .4 WriteData [31] $end
$var wire 1 /4 WriteData [30] $end
$var wire 1 04 WriteData [29] $end
$var wire 1 14 WriteData [28] $end
$var wire 1 24 WriteData [27] $end
$var wire 1 34 WriteData [26] $end
$var wire 1 44 WriteData [25] $end
$var wire 1 54 WriteData [24] $end
$var wire 1 64 WriteData [23] $end
$var wire 1 74 WriteData [22] $end
$var wire 1 84 WriteData [21] $end
$var wire 1 94 WriteData [20] $end
$var wire 1 :4 WriteData [19] $end
$var wire 1 ;4 WriteData [18] $end
$var wire 1 <4 WriteData [17] $end
$var wire 1 =4 WriteData [16] $end
$var wire 1 >4 WriteData [15] $end
$var wire 1 ?4 WriteData [14] $end
$var wire 1 @4 WriteData [13] $end
$var wire 1 A4 WriteData [12] $end
$var wire 1 B4 WriteData [11] $end
$var wire 1 C4 WriteData [10] $end
$var wire 1 D4 WriteData [9] $end
$var wire 1 E4 WriteData [8] $end
$var wire 1 F4 WriteData [7] $end
$var wire 1 G4 WriteData [6] $end
$var wire 1 H4 WriteData [5] $end
$var wire 1 I4 WriteData [4] $end
$var wire 1 J4 WriteData [3] $end
$var wire 1 K4 WriteData [2] $end
$var wire 1 L4 WriteData [1] $end
$var wire 1 M4 WriteData [0] $end
$var wire 1 U+ PC [31] $end
$var wire 1 P+ PC [30] $end
$var wire 1 K+ PC [29] $end
$var wire 1 F+ PC [28] $end
$var wire 1 A+ PC [27] $end
$var wire 1 <+ PC [26] $end
$var wire 1 7+ PC [25] $end
$var wire 1 2+ PC [24] $end
$var wire 1 -+ PC [23] $end
$var wire 1 (+ PC [22] $end
$var wire 1 #+ PC [21] $end
$var wire 1 |* PC [20] $end
$var wire 1 w* PC [19] $end
$var wire 1 r* PC [18] $end
$var wire 1 m* PC [17] $end
$var wire 1 h* PC [16] $end
$var wire 1 c* PC [15] $end
$var wire 1 ^* PC [14] $end
$var wire 1 Y* PC [13] $end
$var wire 1 T* PC [12] $end
$var wire 1 O* PC [11] $end
$var wire 1 J* PC [10] $end
$var wire 1 E* PC [9] $end
$var wire 1 @* PC [8] $end
$var wire 1 ;* PC [7] $end
$var wire 1 6* PC [6] $end
$var wire 1 1* PC [5] $end
$var wire 1 ,* PC [4] $end
$var wire 1 '* PC [3] $end
$var wire 1 "* PC [2] $end
$var wire 1 {) PC [1] $end
$var wire 1 v) PC [0] $end
$var wire 1 .2 ReadData [31] $end
$var wire 1 /2 ReadData [30] $end
$var wire 1 02 ReadData [29] $end
$var wire 1 12 ReadData [28] $end
$var wire 1 22 ReadData [27] $end
$var wire 1 32 ReadData [26] $end
$var wire 1 42 ReadData [25] $end
$var wire 1 52 ReadData [24] $end
$var wire 1 62 ReadData [23] $end
$var wire 1 72 ReadData [22] $end
$var wire 1 82 ReadData [21] $end
$var wire 1 92 ReadData [20] $end
$var wire 1 :2 ReadData [19] $end
$var wire 1 ;2 ReadData [18] $end
$var wire 1 <2 ReadData [17] $end
$var wire 1 =2 ReadData [16] $end
$var wire 1 >2 ReadData [15] $end
$var wire 1 ?2 ReadData [14] $end
$var wire 1 @2 ReadData [13] $end
$var wire 1 A2 ReadData [12] $end
$var wire 1 B2 ReadData [11] $end
$var wire 1 C2 ReadData [10] $end
$var wire 1 D2 ReadData [9] $end
$var wire 1 E2 ReadData [8] $end
$var wire 1 F2 ReadData [7] $end
$var wire 1 G2 ReadData [6] $end
$var wire 1 H2 ReadData [5] $end
$var wire 1 I2 ReadData [4] $end
$var wire 1 J2 ReadData [3] $end
$var wire 1 K2 ReadData [2] $end
$var wire 1 L2 ReadData [1] $end
$var wire 1 M2 ReadData [0] $end
$var wire 1 l1 ALUResult [31] $end
$var wire 1 m1 ALUResult [30] $end
$var wire 1 n1 ALUResult [29] $end
$var wire 1 o1 ALUResult [28] $end
$var wire 1 p1 ALUResult [27] $end
$var wire 1 q1 ALUResult [26] $end
$var wire 1 r1 ALUResult [25] $end
$var wire 1 s1 ALUResult [24] $end
$var wire 1 t1 ALUResult [23] $end
$var wire 1 u1 ALUResult [22] $end
$var wire 1 v1 ALUResult [21] $end
$var wire 1 w1 ALUResult [20] $end
$var wire 1 x1 ALUResult [19] $end
$var wire 1 y1 ALUResult [18] $end
$var wire 1 z1 ALUResult [17] $end
$var wire 1 {1 ALUResult [16] $end
$var wire 1 |1 ALUResult [15] $end
$var wire 1 }1 ALUResult [14] $end
$var wire 1 ~1 ALUResult [13] $end
$var wire 1 !2 ALUResult [12] $end
$var wire 1 "2 ALUResult [11] $end
$var wire 1 #2 ALUResult [10] $end
$var wire 1 $2 ALUResult [9] $end
$var wire 1 %2 ALUResult [8] $end
$var wire 1 &2 ALUResult [7] $end
$var wire 1 '2 ALUResult [6] $end
$var wire 1 (2 ALUResult [5] $end
$var wire 1 )2 ALUResult [4] $end
$var wire 1 *2 ALUResult [3] $end
$var wire 1 +2 ALUResult [2] $end
$var wire 1 ,2 ALUResult [1] $end
$var wire 1 -2 ALUResult [0] $end
$scope module instmem $end
$var wire 1 U+ adr [31] $end
$var wire 1 P+ adr [30] $end
$var wire 1 K+ adr [29] $end
$var wire 1 F+ adr [28] $end
$var wire 1 A+ adr [27] $end
$var wire 1 <+ adr [26] $end
$var wire 1 7+ adr [25] $end
$var wire 1 2+ adr [24] $end
$var wire 1 -+ adr [23] $end
$var wire 1 (+ adr [22] $end
$var wire 1 #+ adr [21] $end
$var wire 1 |* adr [20] $end
$var wire 1 w* adr [19] $end
$var wire 1 r* adr [18] $end
$var wire 1 m* adr [17] $end
$var wire 1 h* adr [16] $end
$var wire 1 c* adr [15] $end
$var wire 1 ^* adr [14] $end
$var wire 1 Y* adr [13] $end
$var wire 1 T* adr [12] $end
$var wire 1 O* adr [11] $end
$var wire 1 J* adr [10] $end
$var wire 1 E* adr [9] $end
$var wire 1 @* adr [8] $end
$var wire 1 ;* adr [7] $end
$var wire 1 6* adr [6] $end
$var wire 1 1* adr [5] $end
$var wire 1 ,* adr [4] $end
$var wire 1 '* adr [3] $end
$var wire 1 "* adr [2] $end
$var wire 1 {) adr [1] $end
$var wire 1 v) adr [0] $end
$var wire 1 "$ dout [31] $end
$var wire 1 #$ dout [30] $end
$var wire 1 $$ dout [29] $end
$var wire 1 %$ dout [28] $end
$var wire 1 &$ dout [27] $end
$var wire 1 '$ dout [26] $end
$var wire 1 I0 dout [25] $end
$var wire 1 J0 dout [24] $end
$var wire 1 K0 dout [23] $end
$var wire 1 L0 dout [22] $end
$var wire 1 M0 dout [21] $end
$var wire 1 \1 dout [20] $end
$var wire 1 ]1 dout [19] $end
$var wire 1 ^1 dout [18] $end
$var wire 1 _1 dout [17] $end
$var wire 1 `1 dout [16] $end
$var wire 1 \3 dout [15] $end
$var wire 1 ]3 dout [14] $end
$var wire 1 ^3 dout [13] $end
$var wire 1 _3 dout [12] $end
$var wire 1 `3 dout [11] $end
$var wire 1 a3 dout [10] $end
$var wire 1 b3 dout [9] $end
$var wire 1 c3 dout [8] $end
$var wire 1 d3 dout [7] $end
$var wire 1 e3 dout [6] $end
$var wire 1 f3 dout [5] $end
$var wire 1 g3 dout [4] $end
$var wire 1 h3 dout [3] $end
$var wire 1 i3 dout [2] $end
$var wire 1 j3 dout [1] $end
$var wire 1 k3 dout [0] $end
$var reg 8192 U" Imem [31:0] $end
$upscope $end
$scope module contr $end
$var wire 1 "$ OperationCode [5] $end
$var wire 1 #$ OperationCode [4] $end
$var wire 1 $$ OperationCode [3] $end
$var wire 1 %$ OperationCode [2] $end
$var wire 1 &$ OperationCode [1] $end
$var wire 1 '$ OperationCode [0] $end
$var wire 1 f3 Function [5] $end
$var wire 1 g3 Function [4] $end
$var wire 1 h3 Function [3] $end
$var wire 1 i3 Function [2] $end
$var wire 1 j3 Function [1] $end
$var wire 1 k3 Function [0] $end
$var wire 1 b$ Zero $end
$var wire 1 %0 PCSource $end
$var reg 1 d" MemoryToRegister $end
$var reg 1 e" MemoryWrite $end
$var reg 1 f" ALUSource $end
$var reg 1 g" RegisterDestination $end
$var reg 1 h" RegisterWrite $end
$var reg 1 i" MemoryRead $end
$var reg 4 j" ALUControl [3:0] $end
$var reg 8 k" temp [7:0] $end
$var reg 1 l" Branch $end
$var reg 1 m" B $end
$upscope $end
$scope module datamem $end
$var wire 1 F0 clk $end
$var wire 1 o" writeenable $end
$var wire 1 p" readenable $end
$var wire 1 l1 address [31] $end
$var wire 1 m1 address [30] $end
$var wire 1 n1 address [29] $end
$var wire 1 o1 address [28] $end
$var wire 1 p1 address [27] $end
$var wire 1 q1 address [26] $end
$var wire 1 r1 address [25] $end
$var wire 1 s1 address [24] $end
$var wire 1 t1 address [23] $end
$var wire 1 u1 address [22] $end
$var wire 1 v1 address [21] $end
$var wire 1 w1 address [20] $end
$var wire 1 x1 address [19] $end
$var wire 1 y1 address [18] $end
$var wire 1 z1 address [17] $end
$var wire 1 {1 address [16] $end
$var wire 1 |1 address [15] $end
$var wire 1 }1 address [14] $end
$var wire 1 ~1 address [13] $end
$var wire 1 !2 address [12] $end
$var wire 1 "2 address [11] $end
$var wire 1 #2 address [10] $end
$var wire 1 $2 address [9] $end
$var wire 1 %2 address [8] $end
$var wire 1 &2 address [7] $end
$var wire 1 '2 address [6] $end
$var wire 1 (2 address [5] $end
$var wire 1 )2 address [4] $end
$var wire 1 *2 address [3] $end
$var wire 1 +2 address [2] $end
$var wire 1 ,2 address [1] $end
$var wire 1 -2 address [0] $end
$var wire 1 .4 datain [31] $end
$var wire 1 /4 datain [30] $end
$var wire 1 04 datain [29] $end
$var wire 1 14 datain [28] $end
$var wire 1 24 datain [27] $end
$var wire 1 34 datain [26] $end
$var wire 1 44 datain [25] $end
$var wire 1 54 datain [24] $end
$var wire 1 64 datain [23] $end
$var wire 1 74 datain [22] $end
$var wire 1 84 datain [21] $end
$var wire 1 94 datain [20] $end
$var wire 1 :4 datain [19] $end
$var wire 1 ;4 datain [18] $end
$var wire 1 <4 datain [17] $end
$var wire 1 =4 datain [16] $end
$var wire 1 >4 datain [15] $end
$var wire 1 ?4 datain [14] $end
$var wire 1 @4 datain [13] $end
$var wire 1 A4 datain [12] $end
$var wire 1 B4 datain [11] $end
$var wire 1 C4 datain [10] $end
$var wire 1 D4 datain [9] $end
$var wire 1 E4 datain [8] $end
$var wire 1 F4 datain [7] $end
$var wire 1 G4 datain [6] $end
$var wire 1 H4 datain [5] $end
$var wire 1 I4 datain [4] $end
$var wire 1 J4 datain [3] $end
$var wire 1 K4 datain [2] $end
$var wire 1 L4 datain [1] $end
$var wire 1 M4 datain [0] $end
$var reg 32 S# dataout [31:0] $end
$var reg 4096 T# Dmem [31:0] $end
$upscope $end
$scope module dp $end
$var wire 1 F0 clk $end
$var wire 1 H0 reset $end
$var wire 1 f1 RegisterDestination $end
$var wire 1 G0 RegisterWrite $end
$var wire 1 n4 ALUSource $end
$var wire 1 N2 MemoryToRegister $end
$var wire 1 %0 PCSource $end
$var wire 1 Q3 ALUControl [3] $end
$var wire 1 R3 ALUControl [2] $end
$var wire 1 S3 ALUControl [1] $end
$var wire 1 T3 ALUControl [0] $end
$var wire 1 .2 ReadData [31] $end
$var wire 1 /2 ReadData [30] $end
$var wire 1 02 ReadData [29] $end
$var wire 1 12 ReadData [28] $end
$var wire 1 22 ReadData [27] $end
$var wire 1 32 ReadData [26] $end
$var wire 1 42 ReadData [25] $end
$var wire 1 52 ReadData [24] $end
$var wire 1 62 ReadData [23] $end
$var wire 1 72 ReadData [22] $end
$var wire 1 82 ReadData [21] $end
$var wire 1 92 ReadData [20] $end
$var wire 1 :2 ReadData [19] $end
$var wire 1 ;2 ReadData [18] $end
$var wire 1 <2 ReadData [17] $end
$var wire 1 =2 ReadData [16] $end
$var wire 1 >2 ReadData [15] $end
$var wire 1 ?2 ReadData [14] $end
$var wire 1 @2 ReadData [13] $end
$var wire 1 A2 ReadData [12] $end
$var wire 1 B2 ReadData [11] $end
$var wire 1 C2 ReadData [10] $end
$var wire 1 D2 ReadData [9] $end
$var wire 1 E2 ReadData [8] $end
$var wire 1 F2 ReadData [7] $end
$var wire 1 G2 ReadData [6] $end
$var wire 1 H2 ReadData [5] $end
$var wire 1 I2 ReadData [4] $end
$var wire 1 J2 ReadData [3] $end
$var wire 1 K2 ReadData [2] $end
$var wire 1 L2 ReadData [1] $end
$var wire 1 M2 ReadData [0] $end
$var wire 1 "$ Instruction [31] $end
$var wire 1 #$ Instruction [30] $end
$var wire 1 $$ Instruction [29] $end
$var wire 1 %$ Instruction [28] $end
$var wire 1 &$ Instruction [27] $end
$var wire 1 '$ Instruction [26] $end
$var wire 1 I0 Instruction [25] $end
$var wire 1 J0 Instruction [24] $end
$var wire 1 K0 Instruction [23] $end
$var wire 1 L0 Instruction [22] $end
$var wire 1 M0 Instruction [21] $end
$var wire 1 \1 Instruction [20] $end
$var wire 1 ]1 Instruction [19] $end
$var wire 1 ^1 Instruction [18] $end
$var wire 1 _1 Instruction [17] $end
$var wire 1 `1 Instruction [16] $end
$var wire 1 \3 Instruction [15] $end
$var wire 1 ]3 Instruction [14] $end
$var wire 1 ^3 Instruction [13] $end
$var wire 1 _3 Instruction [12] $end
$var wire 1 `3 Instruction [11] $end
$var wire 1 a3 Instruction [10] $end
$var wire 1 b3 Instruction [9] $end
$var wire 1 c3 Instruction [8] $end
$var wire 1 d3 Instruction [7] $end
$var wire 1 e3 Instruction [6] $end
$var wire 1 f3 Instruction [5] $end
$var wire 1 g3 Instruction [4] $end
$var wire 1 h3 Instruction [3] $end
$var wire 1 i3 Instruction [2] $end
$var wire 1 j3 Instruction [1] $end
$var wire 1 k3 Instruction [0] $end
$var wire 1 U+ PC [31] $end
$var wire 1 P+ PC [30] $end
$var wire 1 K+ PC [29] $end
$var wire 1 F+ PC [28] $end
$var wire 1 A+ PC [27] $end
$var wire 1 <+ PC [26] $end
$var wire 1 7+ PC [25] $end
$var wire 1 2+ PC [24] $end
$var wire 1 -+ PC [23] $end
$var wire 1 (+ PC [22] $end
$var wire 1 #+ PC [21] $end
$var wire 1 |* PC [20] $end
$var wire 1 w* PC [19] $end
$var wire 1 r* PC [18] $end
$var wire 1 m* PC [17] $end
$var wire 1 h* PC [16] $end
$var wire 1 c* PC [15] $end
$var wire 1 ^* PC [14] $end
$var wire 1 Y* PC [13] $end
$var wire 1 T* PC [12] $end
$var wire 1 O* PC [11] $end
$var wire 1 J* PC [10] $end
$var wire 1 E* PC [9] $end
$var wire 1 @* PC [8] $end
$var wire 1 ;* PC [7] $end
$var wire 1 6* PC [6] $end
$var wire 1 1* PC [5] $end
$var wire 1 ,* PC [4] $end
$var wire 1 '* PC [3] $end
$var wire 1 "* PC [2] $end
$var wire 1 {) PC [1] $end
$var wire 1 v) PC [0] $end
$var wire 1 b$ ZeroFlag $end
$var wire 1 .4 WriteData [31] $end
$var wire 1 /4 WriteData [30] $end
$var wire 1 04 WriteData [29] $end
$var wire 1 14 WriteData [28] $end
$var wire 1 24 WriteData [27] $end
$var wire 1 34 WriteData [26] $end
$var wire 1 44 WriteData [25] $end
$var wire 1 54 WriteData [24] $end
$var wire 1 64 WriteData [23] $end
$var wire 1 74 WriteData [22] $end
$var wire 1 84 WriteData [21] $end
$var wire 1 94 WriteData [20] $end
$var wire 1 :4 WriteData [19] $end
$var wire 1 ;4 WriteData [18] $end
$var wire 1 <4 WriteData [17] $end
$var wire 1 =4 WriteData [16] $end
$var wire 1 >4 WriteData [15] $end
$var wire 1 ?4 WriteData [14] $end
$var wire 1 @4 WriteData [13] $end
$var wire 1 A4 WriteData [12] $end
$var wire 1 B4 WriteData [11] $end
$var wire 1 C4 WriteData [10] $end
$var wire 1 D4 WriteData [9] $end
$var wire 1 E4 WriteData [8] $end
$var wire 1 F4 WriteData [7] $end
$var wire 1 G4 WriteData [6] $end
$var wire 1 H4 WriteData [5] $end
$var wire 1 I4 WriteData [4] $end
$var wire 1 J4 WriteData [3] $end
$var wire 1 K4 WriteData [2] $end
$var wire 1 L4 WriteData [1] $end
$var wire 1 M4 WriteData [0] $end
$var wire 1 l1 ALUResult [31] $end
$var wire 1 m1 ALUResult [30] $end
$var wire 1 n1 ALUResult [29] $end
$var wire 1 o1 ALUResult [28] $end
$var wire 1 p1 ALUResult [27] $end
$var wire 1 q1 ALUResult [26] $end
$var wire 1 r1 ALUResult [25] $end
$var wire 1 s1 ALUResult [24] $end
$var wire 1 t1 ALUResult [23] $end
$var wire 1 u1 ALUResult [22] $end
$var wire 1 v1 ALUResult [21] $end
$var wire 1 w1 ALUResult [20] $end
$var wire 1 x1 ALUResult [19] $end
$var wire 1 y1 ALUResult [18] $end
$var wire 1 z1 ALUResult [17] $end
$var wire 1 {1 ALUResult [16] $end
$var wire 1 |1 ALUResult [15] $end
$var wire 1 }1 ALUResult [14] $end
$var wire 1 ~1 ALUResult [13] $end
$var wire 1 !2 ALUResult [12] $end
$var wire 1 "2 ALUResult [11] $end
$var wire 1 #2 ALUResult [10] $end
$var wire 1 $2 ALUResult [9] $end
$var wire 1 %2 ALUResult [8] $end
$var wire 1 &2 ALUResult [7] $end
$var wire 1 '2 ALUResult [6] $end
$var wire 1 (2 ALUResult [5] $end
$var wire 1 )2 ALUResult [4] $end
$var wire 1 *2 ALUResult [3] $end
$var wire 1 +2 ALUResult [2] $end
$var wire 1 ,2 ALUResult [1] $end
$var wire 1 -2 ALUResult [0] $end
$var wire 1 &0 PCNext [31] $end
$var wire 1 '0 PCNext [30] $end
$var wire 1 (0 PCNext [29] $end
$var wire 1 )0 PCNext [28] $end
$var wire 1 *0 PCNext [27] $end
$var wire 1 +0 PCNext [26] $end
$var wire 1 ,0 PCNext [25] $end
$var wire 1 -0 PCNext [24] $end
$var wire 1 .0 PCNext [23] $end
$var wire 1 /0 PCNext [22] $end
$var wire 1 00 PCNext [21] $end
$var wire 1 10 PCNext [20] $end
$var wire 1 20 PCNext [19] $end
$var wire 1 30 PCNext [18] $end
$var wire 1 40 PCNext [17] $end
$var wire 1 50 PCNext [16] $end
$var wire 1 60 PCNext [15] $end
$var wire 1 70 PCNext [14] $end
$var wire 1 80 PCNext [13] $end
$var wire 1 90 PCNext [12] $end
$var wire 1 :0 PCNext [11] $end
$var wire 1 ;0 PCNext [10] $end
$var wire 1 <0 PCNext [9] $end
$var wire 1 =0 PCNext [8] $end
$var wire 1 >0 PCNext [7] $end
$var wire 1 ?0 PCNext [6] $end
$var wire 1 @0 PCNext [5] $end
$var wire 1 A0 PCNext [4] $end
$var wire 1 B0 PCNext [3] $end
$var wire 1 C0 PCNext [2] $end
$var wire 1 D0 PCNext [1] $end
$var wire 1 E0 PCNext [0] $end
$var wire 1 C/ PCplus4 [31] $end
$var wire 1 D/ PCplus4 [30] $end
$var wire 1 E/ PCplus4 [29] $end
$var wire 1 F/ PCplus4 [28] $end
$var wire 1 G/ PCplus4 [27] $end
$var wire 1 H/ PCplus4 [26] $end
$var wire 1 I/ PCplus4 [25] $end
$var wire 1 J/ PCplus4 [24] $end
$var wire 1 K/ PCplus4 [23] $end
$var wire 1 L/ PCplus4 [22] $end
$var wire 1 M/ PCplus4 [21] $end
$var wire 1 N/ PCplus4 [20] $end
$var wire 1 O/ PCplus4 [19] $end
$var wire 1 P/ PCplus4 [18] $end
$var wire 1 Q/ PCplus4 [17] $end
$var wire 1 R/ PCplus4 [16] $end
$var wire 1 S/ PCplus4 [15] $end
$var wire 1 T/ PCplus4 [14] $end
$var wire 1 U/ PCplus4 [13] $end
$var wire 1 V/ PCplus4 [12] $end
$var wire 1 W/ PCplus4 [11] $end
$var wire 1 X/ PCplus4 [10] $end
$var wire 1 Y/ PCplus4 [9] $end
$var wire 1 Z/ PCplus4 [8] $end
$var wire 1 [/ PCplus4 [7] $end
$var wire 1 \/ PCplus4 [6] $end
$var wire 1 ]/ PCplus4 [5] $end
$var wire 1 ^/ PCplus4 [4] $end
$var wire 1 _/ PCplus4 [3] $end
$var wire 1 `/ PCplus4 [2] $end
$var wire 1 a/ PCplus4 [1] $end
$var wire 1 b/ PCplus4 [0] $end
$var wire 1 c/ PCBranch [31] $end
$var wire 1 d/ PCBranch [30] $end
$var wire 1 e/ PCBranch [29] $end
$var wire 1 f/ PCBranch [28] $end
$var wire 1 g/ PCBranch [27] $end
$var wire 1 h/ PCBranch [26] $end
$var wire 1 i/ PCBranch [25] $end
$var wire 1 j/ PCBranch [24] $end
$var wire 1 k/ PCBranch [23] $end
$var wire 1 l/ PCBranch [22] $end
$var wire 1 m/ PCBranch [21] $end
$var wire 1 n/ PCBranch [20] $end
$var wire 1 o/ PCBranch [19] $end
$var wire 1 p/ PCBranch [18] $end
$var wire 1 q/ PCBranch [17] $end
$var wire 1 r/ PCBranch [16] $end
$var wire 1 s/ PCBranch [15] $end
$var wire 1 t/ PCBranch [14] $end
$var wire 1 u/ PCBranch [13] $end
$var wire 1 v/ PCBranch [12] $end
$var wire 1 w/ PCBranch [11] $end
$var wire 1 x/ PCBranch [10] $end
$var wire 1 y/ PCBranch [9] $end
$var wire 1 z/ PCBranch [8] $end
$var wire 1 {/ PCBranch [7] $end
$var wire 1 |/ PCBranch [6] $end
$var wire 1 }/ PCBranch [5] $end
$var wire 1 ~/ PCBranch [4] $end
$var wire 1 !0 PCBranch [3] $end
$var wire 1 "0 PCBranch [2] $end
$var wire 1 #0 PCBranch [1] $end
$var wire 1 $0 PCBranch [0] $end
$var wire 1 N4 extendedimm [31] $end
$var wire 1 O4 extendedimm [30] $end
$var wire 1 P4 extendedimm [29] $end
$var wire 1 Q4 extendedimm [28] $end
$var wire 1 R4 extendedimm [27] $end
$var wire 1 S4 extendedimm [26] $end
$var wire 1 T4 extendedimm [25] $end
$var wire 1 U4 extendedimm [24] $end
$var wire 1 V4 extendedimm [23] $end
$var wire 1 W4 extendedimm [22] $end
$var wire 1 X4 extendedimm [21] $end
$var wire 1 Y4 extendedimm [20] $end
$var wire 1 Z4 extendedimm [19] $end
$var wire 1 [4 extendedimm [18] $end
$var wire 1 \4 extendedimm [17] $end
$var wire 1 ]4 extendedimm [16] $end
$var wire 1 ^4 extendedimm [15] $end
$var wire 1 _4 extendedimm [14] $end
$var wire 1 `4 extendedimm [13] $end
$var wire 1 a4 extendedimm [12] $end
$var wire 1 b4 extendedimm [11] $end
$var wire 1 c4 extendedimm [10] $end
$var wire 1 d4 extendedimm [9] $end
$var wire 1 e4 extendedimm [8] $end
$var wire 1 f4 extendedimm [7] $end
$var wire 1 g4 extendedimm [6] $end
$var wire 1 h4 extendedimm [5] $end
$var wire 1 i4 extendedimm [4] $end
$var wire 1 j4 extendedimm [3] $end
$var wire 1 k4 extendedimm [2] $end
$var wire 1 l4 extendedimm [1] $end
$var wire 1 m4 extendedimm [0] $end
$var wire 1 >/ extendedimmafter [31] $end
$var wire 1 9/ extendedimmafter [30] $end
$var wire 1 4/ extendedimmafter [29] $end
$var wire 1 // extendedimmafter [28] $end
$var wire 1 */ extendedimmafter [27] $end
$var wire 1 %/ extendedimmafter [26] $end
$var wire 1 ~. extendedimmafter [25] $end
$var wire 1 y. extendedimmafter [24] $end
$var wire 1 t. extendedimmafter [23] $end
$var wire 1 o. extendedimmafter [22] $end
$var wire 1 j. extendedimmafter [21] $end
$var wire 1 e. extendedimmafter [20] $end
$var wire 1 `. extendedimmafter [19] $end
$var wire 1 [. extendedimmafter [18] $end
$var wire 1 V. extendedimmafter [17] $end
$var wire 1 Q. extendedimmafter [16] $end
$var wire 1 L. extendedimmafter [15] $end
$var wire 1 G. extendedimmafter [14] $end
$var wire 1 B. extendedimmafter [13] $end
$var wire 1 =. extendedimmafter [12] $end
$var wire 1 8. extendedimmafter [11] $end
$var wire 1 3. extendedimmafter [10] $end
$var wire 1 .. extendedimmafter [9] $end
$var wire 1 ). extendedimmafter [8] $end
$var wire 1 $. extendedimmafter [7] $end
$var wire 1 }- extendedimmafter [6] $end
$var wire 1 x- extendedimmafter [5] $end
$var wire 1 s- extendedimmafter [4] $end
$var wire 1 n- extendedimmafter [3] $end
$var wire 1 i- extendedimmafter [2] $end
$var wire 1 d- extendedimmafter [1] $end
$var wire 1 _- extendedimmafter [0] $end
$var wire 1 O2 MUXresult [31] $end
$var wire 1 P2 MUXresult [30] $end
$var wire 1 Q2 MUXresult [29] $end
$var wire 1 R2 MUXresult [28] $end
$var wire 1 S2 MUXresult [27] $end
$var wire 1 T2 MUXresult [26] $end
$var wire 1 U2 MUXresult [25] $end
$var wire 1 V2 MUXresult [24] $end
$var wire 1 W2 MUXresult [23] $end
$var wire 1 X2 MUXresult [22] $end
$var wire 1 Y2 MUXresult [21] $end
$var wire 1 Z2 MUXresult [20] $end
$var wire 1 [2 MUXresult [19] $end
$var wire 1 \2 MUXresult [18] $end
$var wire 1 ]2 MUXresult [17] $end
$var wire 1 ^2 MUXresult [16] $end
$var wire 1 _2 MUXresult [15] $end
$var wire 1 `2 MUXresult [14] $end
$var wire 1 a2 MUXresult [13] $end
$var wire 1 b2 MUXresult [12] $end
$var wire 1 c2 MUXresult [11] $end
$var wire 1 d2 MUXresult [10] $end
$var wire 1 e2 MUXresult [9] $end
$var wire 1 f2 MUXresult [8] $end
$var wire 1 g2 MUXresult [7] $end
$var wire 1 h2 MUXresult [6] $end
$var wire 1 i2 MUXresult [5] $end
$var wire 1 j2 MUXresult [4] $end
$var wire 1 k2 MUXresult [3] $end
$var wire 1 l2 MUXresult [2] $end
$var wire 1 m2 MUXresult [1] $end
$var wire 1 n2 MUXresult [0] $end
$var wire 1 o2 dataone [31] $end
$var wire 1 p2 dataone [30] $end
$var wire 1 q2 dataone [29] $end
$var wire 1 r2 dataone [28] $end
$var wire 1 s2 dataone [27] $end
$var wire 1 t2 dataone [26] $end
$var wire 1 u2 dataone [25] $end
$var wire 1 v2 dataone [24] $end
$var wire 1 w2 dataone [23] $end
$var wire 1 x2 dataone [22] $end
$var wire 1 y2 dataone [21] $end
$var wire 1 z2 dataone [20] $end
$var wire 1 {2 dataone [19] $end
$var wire 1 |2 dataone [18] $end
$var wire 1 }2 dataone [17] $end
$var wire 1 ~2 dataone [16] $end
$var wire 1 !3 dataone [15] $end
$var wire 1 "3 dataone [14] $end
$var wire 1 #3 dataone [13] $end
$var wire 1 $3 dataone [12] $end
$var wire 1 %3 dataone [11] $end
$var wire 1 &3 dataone [10] $end
$var wire 1 '3 dataone [9] $end
$var wire 1 (3 dataone [8] $end
$var wire 1 )3 dataone [7] $end
$var wire 1 *3 dataone [6] $end
$var wire 1 +3 dataone [5] $end
$var wire 1 ,3 dataone [4] $end
$var wire 1 -3 dataone [3] $end
$var wire 1 .3 dataone [2] $end
$var wire 1 /3 dataone [1] $end
$var wire 1 03 dataone [0] $end
$var wire 1 o4 aluop2 [31] $end
$var wire 1 p4 aluop2 [30] $end
$var wire 1 q4 aluop2 [29] $end
$var wire 1 r4 aluop2 [28] $end
$var wire 1 s4 aluop2 [27] $end
$var wire 1 t4 aluop2 [26] $end
$var wire 1 u4 aluop2 [25] $end
$var wire 1 v4 aluop2 [24] $end
$var wire 1 w4 aluop2 [23] $end
$var wire 1 x4 aluop2 [22] $end
$var wire 1 y4 aluop2 [21] $end
$var wire 1 z4 aluop2 [20] $end
$var wire 1 {4 aluop2 [19] $end
$var wire 1 |4 aluop2 [18] $end
$var wire 1 }4 aluop2 [17] $end
$var wire 1 ~4 aluop2 [16] $end
$var wire 1 !5 aluop2 [15] $end
$var wire 1 "5 aluop2 [14] $end
$var wire 1 #5 aluop2 [13] $end
$var wire 1 $5 aluop2 [12] $end
$var wire 1 %5 aluop2 [11] $end
$var wire 1 &5 aluop2 [10] $end
$var wire 1 '5 aluop2 [9] $end
$var wire 1 (5 aluop2 [8] $end
$var wire 1 )5 aluop2 [7] $end
$var wire 1 *5 aluop2 [6] $end
$var wire 1 +5 aluop2 [5] $end
$var wire 1 ,5 aluop2 [4] $end
$var wire 1 -5 aluop2 [3] $end
$var wire 1 .5 aluop2 [2] $end
$var wire 1 /5 aluop2 [1] $end
$var wire 1 05 aluop2 [0] $end
$var wire 1 g1 writereg [4] $end
$var wire 1 h1 writereg [3] $end
$var wire 1 i1 writereg [2] $end
$var wire 1 j1 writereg [1] $end
$var wire 1 k1 writereg [0] $end
$scope module PCregister $end
$var wire 1 F0 clk $end
$var wire 1 H0 rst $end
$var wire 1 &0 d [31] $end
$var wire 1 '0 d [30] $end
$var wire 1 (0 d [29] $end
$var wire 1 )0 d [28] $end
$var wire 1 *0 d [27] $end
$var wire 1 +0 d [26] $end
$var wire 1 ,0 d [25] $end
$var wire 1 -0 d [24] $end
$var wire 1 .0 d [23] $end
$var wire 1 /0 d [22] $end
$var wire 1 00 d [21] $end
$var wire 1 10 d [20] $end
$var wire 1 20 d [19] $end
$var wire 1 30 d [18] $end
$var wire 1 40 d [17] $end
$var wire 1 50 d [16] $end
$var wire 1 60 d [15] $end
$var wire 1 70 d [14] $end
$var wire 1 80 d [13] $end
$var wire 1 90 d [12] $end
$var wire 1 :0 d [11] $end
$var wire 1 ;0 d [10] $end
$var wire 1 <0 d [9] $end
$var wire 1 =0 d [8] $end
$var wire 1 >0 d [7] $end
$var wire 1 ?0 d [6] $end
$var wire 1 @0 d [5] $end
$var wire 1 A0 d [4] $end
$var wire 1 B0 d [3] $end
$var wire 1 C0 d [2] $end
$var wire 1 D0 d [1] $end
$var wire 1 E0 d [0] $end
$var reg 32 R( q [31:0] $end
$upscope $end
$scope module PCadd4 $end
$var wire 1 U+ a [31] $end
$var wire 1 P+ a [30] $end
$var wire 1 K+ a [29] $end
$var wire 1 F+ a [28] $end
$var wire 1 A+ a [27] $end
$var wire 1 <+ a [26] $end
$var wire 1 7+ a [25] $end
$var wire 1 2+ a [24] $end
$var wire 1 -+ a [23] $end
$var wire 1 (+ a [22] $end
$var wire 1 #+ a [21] $end
$var wire 1 |* a [20] $end
$var wire 1 w* a [19] $end
$var wire 1 r* a [18] $end
$var wire 1 m* a [17] $end
$var wire 1 h* a [16] $end
$var wire 1 c* a [15] $end
$var wire 1 ^* a [14] $end
$var wire 1 Y* a [13] $end
$var wire 1 T* a [12] $end
$var wire 1 O* a [11] $end
$var wire 1 J* a [10] $end
$var wire 1 E* a [9] $end
$var wire 1 @* a [8] $end
$var wire 1 ;* a [7] $end
$var wire 1 6* a [6] $end
$var wire 1 1* a [5] $end
$var wire 1 ,* a [4] $end
$var wire 1 '* a [3] $end
$var wire 1 "* a [2] $end
$var wire 1 {) a [1] $end
$var wire 1 v) a [0] $end
$var wire 1 V+ b [31] $end
$var wire 1 Q+ b [30] $end
$var wire 1 L+ b [29] $end
$var wire 1 G+ b [28] $end
$var wire 1 B+ b [27] $end
$var wire 1 =+ b [26] $end
$var wire 1 8+ b [25] $end
$var wire 1 3+ b [24] $end
$var wire 1 .+ b [23] $end
$var wire 1 )+ b [22] $end
$var wire 1 $+ b [21] $end
$var wire 1 }* b [20] $end
$var wire 1 x* b [19] $end
$var wire 1 s* b [18] $end
$var wire 1 n* b [17] $end
$var wire 1 i* b [16] $end
$var wire 1 d* b [15] $end
$var wire 1 _* b [14] $end
$var wire 1 Z* b [13] $end
$var wire 1 U* b [12] $end
$var wire 1 P* b [11] $end
$var wire 1 K* b [10] $end
$var wire 1 F* b [9] $end
$var wire 1 A* b [8] $end
$var wire 1 <* b [7] $end
$var wire 1 7* b [6] $end
$var wire 1 2* b [5] $end
$var wire 1 -* b [4] $end
$var wire 1 (* b [3] $end
$var wire 1 #* b [2] $end
$var wire 1 |) b [1] $end
$var wire 1 w) b [0] $end
$var wire 1 X+ w [32] $end
$var wire 1 W+ w [31] $end
$var wire 1 R+ w [30] $end
$var wire 1 M+ w [29] $end
$var wire 1 H+ w [28] $end
$var wire 1 C+ w [27] $end
$var wire 1 >+ w [26] $end
$var wire 1 9+ w [25] $end
$var wire 1 4+ w [24] $end
$var wire 1 /+ w [23] $end
$var wire 1 *+ w [22] $end
$var wire 1 %+ w [21] $end
$var wire 1 ~* w [20] $end
$var wire 1 y* w [19] $end
$var wire 1 t* w [18] $end
$var wire 1 o* w [17] $end
$var wire 1 j* w [16] $end
$var wire 1 e* w [15] $end
$var wire 1 `* w [14] $end
$var wire 1 [* w [13] $end
$var wire 1 V* w [12] $end
$var wire 1 Q* w [11] $end
$var wire 1 L* w [10] $end
$var wire 1 G* w [9] $end
$var wire 1 B* w [8] $end
$var wire 1 =* w [7] $end
$var wire 1 8* w [6] $end
$var wire 1 3* w [5] $end
$var wire 1 .* w [4] $end
$var wire 1 )* w [3] $end
$var wire 1 $* w [2] $end
$var wire 1 }) w [1] $end
$var wire 1 x) w [0] $end
$var wire 1 C/ y [31] $end
$var wire 1 D/ y [30] $end
$var wire 1 E/ y [29] $end
$var wire 1 F/ y [28] $end
$var wire 1 G/ y [27] $end
$var wire 1 H/ y [26] $end
$var wire 1 I/ y [25] $end
$var wire 1 J/ y [24] $end
$var wire 1 K/ y [23] $end
$var wire 1 L/ y [22] $end
$var wire 1 M/ y [21] $end
$var wire 1 N/ y [20] $end
$var wire 1 O/ y [19] $end
$var wire 1 P/ y [18] $end
$var wire 1 Q/ y [17] $end
$var wire 1 R/ y [16] $end
$var wire 1 S/ y [15] $end
$var wire 1 T/ y [14] $end
$var wire 1 U/ y [13] $end
$var wire 1 V/ y [12] $end
$var wire 1 W/ y [11] $end
$var wire 1 X/ y [10] $end
$var wire 1 Y/ y [9] $end
$var wire 1 Z/ y [8] $end
$var wire 1 [/ y [7] $end
$var wire 1 \/ y [6] $end
$var wire 1 ]/ y [5] $end
$var wire 1 ^/ y [4] $end
$var wire 1 _/ y [3] $end
$var wire 1 `/ y [2] $end
$var wire 1 a/ y [1] $end
$var wire 1 b/ y [0] $end
$scope module adding[0].FA_inst $end
$var wire 1 v) a $end
$var wire 1 w) b $end
$var wire 1 x) cin $end
$var wire 1 }) cout $end
$var wire 1 b/ s $end
$upscope $end
$scope module adding[1].FA_inst $end
$var wire 1 {) a $end
$var wire 1 |) b $end
$var wire 1 }) cin $end
$var wire 1 $* cout $end
$var wire 1 a/ s $end
$upscope $end
$scope module adding[2].FA_inst $end
$var wire 1 "* a $end
$var wire 1 #* b $end
$var wire 1 $* cin $end
$var wire 1 )* cout $end
$var wire 1 `/ s $end
$upscope $end
$scope module adding[3].FA_inst $end
$var wire 1 '* a $end
$var wire 1 (* b $end
$var wire 1 )* cin $end
$var wire 1 .* cout $end
$var wire 1 _/ s $end
$upscope $end
$scope module adding[4].FA_inst $end
$var wire 1 ,* a $end
$var wire 1 -* b $end
$var wire 1 .* cin $end
$var wire 1 3* cout $end
$var wire 1 ^/ s $end
$upscope $end
$scope module adding[5].FA_inst $end
$var wire 1 1* a $end
$var wire 1 2* b $end
$var wire 1 3* cin $end
$var wire 1 8* cout $end
$var wire 1 ]/ s $end
$upscope $end
$scope module adding[6].FA_inst $end
$var wire 1 6* a $end
$var wire 1 7* b $end
$var wire 1 8* cin $end
$var wire 1 =* cout $end
$var wire 1 \/ s $end
$upscope $end
$scope module adding[7].FA_inst $end
$var wire 1 ;* a $end
$var wire 1 <* b $end
$var wire 1 =* cin $end
$var wire 1 B* cout $end
$var wire 1 [/ s $end
$upscope $end
$scope module adding[8].FA_inst $end
$var wire 1 @* a $end
$var wire 1 A* b $end
$var wire 1 B* cin $end
$var wire 1 G* cout $end
$var wire 1 Z/ s $end
$upscope $end
$scope module adding[9].FA_inst $end
$var wire 1 E* a $end
$var wire 1 F* b $end
$var wire 1 G* cin $end
$var wire 1 L* cout $end
$var wire 1 Y/ s $end
$upscope $end
$scope module adding[10].FA_inst $end
$var wire 1 J* a $end
$var wire 1 K* b $end
$var wire 1 L* cin $end
$var wire 1 Q* cout $end
$var wire 1 X/ s $end
$upscope $end
$scope module adding[11].FA_inst $end
$var wire 1 O* a $end
$var wire 1 P* b $end
$var wire 1 Q* cin $end
$var wire 1 V* cout $end
$var wire 1 W/ s $end
$upscope $end
$scope module adding[12].FA_inst $end
$var wire 1 T* a $end
$var wire 1 U* b $end
$var wire 1 V* cin $end
$var wire 1 [* cout $end
$var wire 1 V/ s $end
$upscope $end
$scope module adding[13].FA_inst $end
$var wire 1 Y* a $end
$var wire 1 Z* b $end
$var wire 1 [* cin $end
$var wire 1 `* cout $end
$var wire 1 U/ s $end
$upscope $end
$scope module adding[14].FA_inst $end
$var wire 1 ^* a $end
$var wire 1 _* b $end
$var wire 1 `* cin $end
$var wire 1 e* cout $end
$var wire 1 T/ s $end
$upscope $end
$scope module adding[15].FA_inst $end
$var wire 1 c* a $end
$var wire 1 d* b $end
$var wire 1 e* cin $end
$var wire 1 j* cout $end
$var wire 1 S/ s $end
$upscope $end
$scope module adding[16].FA_inst $end
$var wire 1 h* a $end
$var wire 1 i* b $end
$var wire 1 j* cin $end
$var wire 1 o* cout $end
$var wire 1 R/ s $end
$upscope $end
$scope module adding[17].FA_inst $end
$var wire 1 m* a $end
$var wire 1 n* b $end
$var wire 1 o* cin $end
$var wire 1 t* cout $end
$var wire 1 Q/ s $end
$upscope $end
$scope module adding[18].FA_inst $end
$var wire 1 r* a $end
$var wire 1 s* b $end
$var wire 1 t* cin $end
$var wire 1 y* cout $end
$var wire 1 P/ s $end
$upscope $end
$scope module adding[19].FA_inst $end
$var wire 1 w* a $end
$var wire 1 x* b $end
$var wire 1 y* cin $end
$var wire 1 ~* cout $end
$var wire 1 O/ s $end
$upscope $end
$scope module adding[20].FA_inst $end
$var wire 1 |* a $end
$var wire 1 }* b $end
$var wire 1 ~* cin $end
$var wire 1 %+ cout $end
$var wire 1 N/ s $end
$upscope $end
$scope module adding[21].FA_inst $end
$var wire 1 #+ a $end
$var wire 1 $+ b $end
$var wire 1 %+ cin $end
$var wire 1 *+ cout $end
$var wire 1 M/ s $end
$upscope $end
$scope module adding[22].FA_inst $end
$var wire 1 (+ a $end
$var wire 1 )+ b $end
$var wire 1 *+ cin $end
$var wire 1 /+ cout $end
$var wire 1 L/ s $end
$upscope $end
$scope module adding[23].FA_inst $end
$var wire 1 -+ a $end
$var wire 1 .+ b $end
$var wire 1 /+ cin $end
$var wire 1 4+ cout $end
$var wire 1 K/ s $end
$upscope $end
$scope module adding[24].FA_inst $end
$var wire 1 2+ a $end
$var wire 1 3+ b $end
$var wire 1 4+ cin $end
$var wire 1 9+ cout $end
$var wire 1 J/ s $end
$upscope $end
$scope module adding[25].FA_inst $end
$var wire 1 7+ a $end
$var wire 1 8+ b $end
$var wire 1 9+ cin $end
$var wire 1 >+ cout $end
$var wire 1 I/ s $end
$upscope $end
$scope module adding[26].FA_inst $end
$var wire 1 <+ a $end
$var wire 1 =+ b $end
$var wire 1 >+ cin $end
$var wire 1 C+ cout $end
$var wire 1 H/ s $end
$upscope $end
$scope module adding[27].FA_inst $end
$var wire 1 A+ a $end
$var wire 1 B+ b $end
$var wire 1 C+ cin $end
$var wire 1 H+ cout $end
$var wire 1 G/ s $end
$upscope $end
$scope module adding[28].FA_inst $end
$var wire 1 F+ a $end
$var wire 1 G+ b $end
$var wire 1 H+ cin $end
$var wire 1 M+ cout $end
$var wire 1 F/ s $end
$upscope $end
$scope module adding[29].FA_inst $end
$var wire 1 K+ a $end
$var wire 1 L+ b $end
$var wire 1 M+ cin $end
$var wire 1 R+ cout $end
$var wire 1 E/ s $end
$upscope $end
$scope module adding[30].FA_inst $end
$var wire 1 P+ a $end
$var wire 1 Q+ b $end
$var wire 1 R+ cin $end
$var wire 1 W+ cout $end
$var wire 1 D/ s $end
$upscope $end
$scope module adding[31].FA_inst $end
$var wire 1 U+ a $end
$var wire 1 V+ b $end
$var wire 1 W+ cin $end
$var wire 1 X+ cout $end
$var wire 1 C/ s $end
$upscope $end
$upscope $end
$scope module shifteradd2 $end
$var wire 1 N4 a [31] $end
$var wire 1 O4 a [30] $end
$var wire 1 P4 a [29] $end
$var wire 1 Q4 a [28] $end
$var wire 1 R4 a [27] $end
$var wire 1 S4 a [26] $end
$var wire 1 T4 a [25] $end
$var wire 1 U4 a [24] $end
$var wire 1 V4 a [23] $end
$var wire 1 W4 a [22] $end
$var wire 1 X4 a [21] $end
$var wire 1 Y4 a [20] $end
$var wire 1 Z4 a [19] $end
$var wire 1 [4 a [18] $end
$var wire 1 \4 a [17] $end
$var wire 1 ]4 a [16] $end
$var wire 1 ^4 a [15] $end
$var wire 1 _4 a [14] $end
$var wire 1 `4 a [13] $end
$var wire 1 a4 a [12] $end
$var wire 1 b4 a [11] $end
$var wire 1 c4 a [10] $end
$var wire 1 d4 a [9] $end
$var wire 1 e4 a [8] $end
$var wire 1 f4 a [7] $end
$var wire 1 g4 a [6] $end
$var wire 1 h4 a [5] $end
$var wire 1 i4 a [4] $end
$var wire 1 j4 a [3] $end
$var wire 1 k4 a [2] $end
$var wire 1 l4 a [1] $end
$var wire 1 m4 a [0] $end
$var wire 1 >/ y [31] $end
$var wire 1 9/ y [30] $end
$var wire 1 4/ y [29] $end
$var wire 1 // y [28] $end
$var wire 1 */ y [27] $end
$var wire 1 %/ y [26] $end
$var wire 1 ~. y [25] $end
$var wire 1 y. y [24] $end
$var wire 1 t. y [23] $end
$var wire 1 o. y [22] $end
$var wire 1 j. y [21] $end
$var wire 1 e. y [20] $end
$var wire 1 `. y [19] $end
$var wire 1 [. y [18] $end
$var wire 1 V. y [17] $end
$var wire 1 Q. y [16] $end
$var wire 1 L. y [15] $end
$var wire 1 G. y [14] $end
$var wire 1 B. y [13] $end
$var wire 1 =. y [12] $end
$var wire 1 8. y [11] $end
$var wire 1 3. y [10] $end
$var wire 1 .. y [9] $end
$var wire 1 ). y [8] $end
$var wire 1 $. y [7] $end
$var wire 1 }- y [6] $end
$var wire 1 x- y [5] $end
$var wire 1 s- y [4] $end
$var wire 1 n- y [3] $end
$var wire 1 i- y [2] $end
$var wire 1 d- y [1] $end
$var wire 1 _- y [0] $end
$upscope $end
$scope module PCaddsigned $end
$var wire 1 >/ a [31] $end
$var wire 1 9/ a [30] $end
$var wire 1 4/ a [29] $end
$var wire 1 // a [28] $end
$var wire 1 */ a [27] $end
$var wire 1 %/ a [26] $end
$var wire 1 ~. a [25] $end
$var wire 1 y. a [24] $end
$var wire 1 t. a [23] $end
$var wire 1 o. a [22] $end
$var wire 1 j. a [21] $end
$var wire 1 e. a [20] $end
$var wire 1 `. a [19] $end
$var wire 1 [. a [18] $end
$var wire 1 V. a [17] $end
$var wire 1 Q. a [16] $end
$var wire 1 L. a [15] $end
$var wire 1 G. a [14] $end
$var wire 1 B. a [13] $end
$var wire 1 =. a [12] $end
$var wire 1 8. a [11] $end
$var wire 1 3. a [10] $end
$var wire 1 .. a [9] $end
$var wire 1 ). a [8] $end
$var wire 1 $. a [7] $end
$var wire 1 }- a [6] $end
$var wire 1 x- a [5] $end
$var wire 1 s- a [4] $end
$var wire 1 n- a [3] $end
$var wire 1 i- a [2] $end
$var wire 1 d- a [1] $end
$var wire 1 _- a [0] $end
$var wire 1 C/ b [31] $end
$var wire 1 D/ b [30] $end
$var wire 1 E/ b [29] $end
$var wire 1 F/ b [28] $end
$var wire 1 G/ b [27] $end
$var wire 1 H/ b [26] $end
$var wire 1 I/ b [25] $end
$var wire 1 J/ b [24] $end
$var wire 1 K/ b [23] $end
$var wire 1 L/ b [22] $end
$var wire 1 M/ b [21] $end
$var wire 1 N/ b [20] $end
$var wire 1 O/ b [19] $end
$var wire 1 P/ b [18] $end
$var wire 1 Q/ b [17] $end
$var wire 1 R/ b [16] $end
$var wire 1 S/ b [15] $end
$var wire 1 T/ b [14] $end
$var wire 1 U/ b [13] $end
$var wire 1 V/ b [12] $end
$var wire 1 W/ b [11] $end
$var wire 1 X/ b [10] $end
$var wire 1 Y/ b [9] $end
$var wire 1 Z/ b [8] $end
$var wire 1 [/ b [7] $end
$var wire 1 \/ b [6] $end
$var wire 1 ]/ b [5] $end
$var wire 1 ^/ b [4] $end
$var wire 1 _/ b [3] $end
$var wire 1 `/ b [2] $end
$var wire 1 a/ b [1] $end
$var wire 1 b/ b [0] $end
$var wire 1 A/ w [32] $end
$var wire 1 @/ w [31] $end
$var wire 1 ;/ w [30] $end
$var wire 1 6/ w [29] $end
$var wire 1 1/ w [28] $end
$var wire 1 ,/ w [27] $end
$var wire 1 '/ w [26] $end
$var wire 1 "/ w [25] $end
$var wire 1 {. w [24] $end
$var wire 1 v. w [23] $end
$var wire 1 q. w [22] $end
$var wire 1 l. w [21] $end
$var wire 1 g. w [20] $end
$var wire 1 b. w [19] $end
$var wire 1 ]. w [18] $end
$var wire 1 X. w [17] $end
$var wire 1 S. w [16] $end
$var wire 1 N. w [15] $end
$var wire 1 I. w [14] $end
$var wire 1 D. w [13] $end
$var wire 1 ?. w [12] $end
$var wire 1 :. w [11] $end
$var wire 1 5. w [10] $end
$var wire 1 0. w [9] $end
$var wire 1 +. w [8] $end
$var wire 1 &. w [7] $end
$var wire 1 !. w [6] $end
$var wire 1 z- w [5] $end
$var wire 1 u- w [4] $end
$var wire 1 p- w [3] $end
$var wire 1 k- w [2] $end
$var wire 1 f- w [1] $end
$var wire 1 a- w [0] $end
$var wire 1 c/ y [31] $end
$var wire 1 d/ y [30] $end
$var wire 1 e/ y [29] $end
$var wire 1 f/ y [28] $end
$var wire 1 g/ y [27] $end
$var wire 1 h/ y [26] $end
$var wire 1 i/ y [25] $end
$var wire 1 j/ y [24] $end
$var wire 1 k/ y [23] $end
$var wire 1 l/ y [22] $end
$var wire 1 m/ y [21] $end
$var wire 1 n/ y [20] $end
$var wire 1 o/ y [19] $end
$var wire 1 p/ y [18] $end
$var wire 1 q/ y [17] $end
$var wire 1 r/ y [16] $end
$var wire 1 s/ y [15] $end
$var wire 1 t/ y [14] $end
$var wire 1 u/ y [13] $end
$var wire 1 v/ y [12] $end
$var wire 1 w/ y [11] $end
$var wire 1 x/ y [10] $end
$var wire 1 y/ y [9] $end
$var wire 1 z/ y [8] $end
$var wire 1 {/ y [7] $end
$var wire 1 |/ y [6] $end
$var wire 1 }/ y [5] $end
$var wire 1 ~/ y [4] $end
$var wire 1 !0 y [3] $end
$var wire 1 "0 y [2] $end
$var wire 1 #0 y [1] $end
$var wire 1 $0 y [0] $end
$scope module adding[0].FA_inst $end
$var wire 1 _- a $end
$var wire 1 b/ b $end
$var wire 1 a- cin $end
$var wire 1 f- cout $end
$var wire 1 $0 s $end
$upscope $end
$scope module adding[1].FA_inst $end
$var wire 1 d- a $end
$var wire 1 a/ b $end
$var wire 1 f- cin $end
$var wire 1 k- cout $end
$var wire 1 #0 s $end
$upscope $end
$scope module adding[2].FA_inst $end
$var wire 1 i- a $end
$var wire 1 `/ b $end
$var wire 1 k- cin $end
$var wire 1 p- cout $end
$var wire 1 "0 s $end
$upscope $end
$scope module adding[3].FA_inst $end
$var wire 1 n- a $end
$var wire 1 _/ b $end
$var wire 1 p- cin $end
$var wire 1 u- cout $end
$var wire 1 !0 s $end
$upscope $end
$scope module adding[4].FA_inst $end
$var wire 1 s- a $end
$var wire 1 ^/ b $end
$var wire 1 u- cin $end
$var wire 1 z- cout $end
$var wire 1 ~/ s $end
$upscope $end
$scope module adding[5].FA_inst $end
$var wire 1 x- a $end
$var wire 1 ]/ b $end
$var wire 1 z- cin $end
$var wire 1 !. cout $end
$var wire 1 }/ s $end
$upscope $end
$scope module adding[6].FA_inst $end
$var wire 1 }- a $end
$var wire 1 \/ b $end
$var wire 1 !. cin $end
$var wire 1 &. cout $end
$var wire 1 |/ s $end
$upscope $end
$scope module adding[7].FA_inst $end
$var wire 1 $. a $end
$var wire 1 [/ b $end
$var wire 1 &. cin $end
$var wire 1 +. cout $end
$var wire 1 {/ s $end
$upscope $end
$scope module adding[8].FA_inst $end
$var wire 1 ). a $end
$var wire 1 Z/ b $end
$var wire 1 +. cin $end
$var wire 1 0. cout $end
$var wire 1 z/ s $end
$upscope $end
$scope module adding[9].FA_inst $end
$var wire 1 .. a $end
$var wire 1 Y/ b $end
$var wire 1 0. cin $end
$var wire 1 5. cout $end
$var wire 1 y/ s $end
$upscope $end
$scope module adding[10].FA_inst $end
$var wire 1 3. a $end
$var wire 1 X/ b $end
$var wire 1 5. cin $end
$var wire 1 :. cout $end
$var wire 1 x/ s $end
$upscope $end
$scope module adding[11].FA_inst $end
$var wire 1 8. a $end
$var wire 1 W/ b $end
$var wire 1 :. cin $end
$var wire 1 ?. cout $end
$var wire 1 w/ s $end
$upscope $end
$scope module adding[12].FA_inst $end
$var wire 1 =. a $end
$var wire 1 V/ b $end
$var wire 1 ?. cin $end
$var wire 1 D. cout $end
$var wire 1 v/ s $end
$upscope $end
$scope module adding[13].FA_inst $end
$var wire 1 B. a $end
$var wire 1 U/ b $end
$var wire 1 D. cin $end
$var wire 1 I. cout $end
$var wire 1 u/ s $end
$upscope $end
$scope module adding[14].FA_inst $end
$var wire 1 G. a $end
$var wire 1 T/ b $end
$var wire 1 I. cin $end
$var wire 1 N. cout $end
$var wire 1 t/ s $end
$upscope $end
$scope module adding[15].FA_inst $end
$var wire 1 L. a $end
$var wire 1 S/ b $end
$var wire 1 N. cin $end
$var wire 1 S. cout $end
$var wire 1 s/ s $end
$upscope $end
$scope module adding[16].FA_inst $end
$var wire 1 Q. a $end
$var wire 1 R/ b $end
$var wire 1 S. cin $end
$var wire 1 X. cout $end
$var wire 1 r/ s $end
$upscope $end
$scope module adding[17].FA_inst $end
$var wire 1 V. a $end
$var wire 1 Q/ b $end
$var wire 1 X. cin $end
$var wire 1 ]. cout $end
$var wire 1 q/ s $end
$upscope $end
$scope module adding[18].FA_inst $end
$var wire 1 [. a $end
$var wire 1 P/ b $end
$var wire 1 ]. cin $end
$var wire 1 b. cout $end
$var wire 1 p/ s $end
$upscope $end
$scope module adding[19].FA_inst $end
$var wire 1 `. a $end
$var wire 1 O/ b $end
$var wire 1 b. cin $end
$var wire 1 g. cout $end
$var wire 1 o/ s $end
$upscope $end
$scope module adding[20].FA_inst $end
$var wire 1 e. a $end
$var wire 1 N/ b $end
$var wire 1 g. cin $end
$var wire 1 l. cout $end
$var wire 1 n/ s $end
$upscope $end
$scope module adding[21].FA_inst $end
$var wire 1 j. a $end
$var wire 1 M/ b $end
$var wire 1 l. cin $end
$var wire 1 q. cout $end
$var wire 1 m/ s $end
$upscope $end
$scope module adding[22].FA_inst $end
$var wire 1 o. a $end
$var wire 1 L/ b $end
$var wire 1 q. cin $end
$var wire 1 v. cout $end
$var wire 1 l/ s $end
$upscope $end
$scope module adding[23].FA_inst $end
$var wire 1 t. a $end
$var wire 1 K/ b $end
$var wire 1 v. cin $end
$var wire 1 {. cout $end
$var wire 1 k/ s $end
$upscope $end
$scope module adding[24].FA_inst $end
$var wire 1 y. a $end
$var wire 1 J/ b $end
$var wire 1 {. cin $end
$var wire 1 "/ cout $end
$var wire 1 j/ s $end
$upscope $end
$scope module adding[25].FA_inst $end
$var wire 1 ~. a $end
$var wire 1 I/ b $end
$var wire 1 "/ cin $end
$var wire 1 '/ cout $end
$var wire 1 i/ s $end
$upscope $end
$scope module adding[26].FA_inst $end
$var wire 1 %/ a $end
$var wire 1 H/ b $end
$var wire 1 '/ cin $end
$var wire 1 ,/ cout $end
$var wire 1 h/ s $end
$upscope $end
$scope module adding[27].FA_inst $end
$var wire 1 */ a $end
$var wire 1 G/ b $end
$var wire 1 ,/ cin $end
$var wire 1 1/ cout $end
$var wire 1 g/ s $end
$upscope $end
$scope module adding[28].FA_inst $end
$var wire 1 // a $end
$var wire 1 F/ b $end
$var wire 1 1/ cin $end
$var wire 1 6/ cout $end
$var wire 1 f/ s $end
$upscope $end
$scope module adding[29].FA_inst $end
$var wire 1 4/ a $end
$var wire 1 E/ b $end
$var wire 1 6/ cin $end
$var wire 1 ;/ cout $end
$var wire 1 e/ s $end
$upscope $end
$scope module adding[30].FA_inst $end
$var wire 1 9/ a $end
$var wire 1 D/ b $end
$var wire 1 ;/ cin $end
$var wire 1 @/ cout $end
$var wire 1 d/ s $end
$upscope $end
$scope module adding[31].FA_inst $end
$var wire 1 >/ a $end
$var wire 1 C/ b $end
$var wire 1 @/ cin $end
$var wire 1 A/ cout $end
$var wire 1 c/ s $end
$upscope $end
$upscope $end
$scope module branchmux $end
$var wire 1 C/ d0 [31] $end
$var wire 1 D/ d0 [30] $end
$var wire 1 E/ d0 [29] $end
$var wire 1 F/ d0 [28] $end
$var wire 1 G/ d0 [27] $end
$var wire 1 H/ d0 [26] $end
$var wire 1 I/ d0 [25] $end
$var wire 1 J/ d0 [24] $end
$var wire 1 K/ d0 [23] $end
$var wire 1 L/ d0 [22] $end
$var wire 1 M/ d0 [21] $end
$var wire 1 N/ d0 [20] $end
$var wire 1 O/ d0 [19] $end
$var wire 1 P/ d0 [18] $end
$var wire 1 Q/ d0 [17] $end
$var wire 1 R/ d0 [16] $end
$var wire 1 S/ d0 [15] $end
$var wire 1 T/ d0 [14] $end
$var wire 1 U/ d0 [13] $end
$var wire 1 V/ d0 [12] $end
$var wire 1 W/ d0 [11] $end
$var wire 1 X/ d0 [10] $end
$var wire 1 Y/ d0 [9] $end
$var wire 1 Z/ d0 [8] $end
$var wire 1 [/ d0 [7] $end
$var wire 1 \/ d0 [6] $end
$var wire 1 ]/ d0 [5] $end
$var wire 1 ^/ d0 [4] $end
$var wire 1 _/ d0 [3] $end
$var wire 1 `/ d0 [2] $end
$var wire 1 a/ d0 [1] $end
$var wire 1 b/ d0 [0] $end
$var wire 1 c/ d1 [31] $end
$var wire 1 d/ d1 [30] $end
$var wire 1 e/ d1 [29] $end
$var wire 1 f/ d1 [28] $end
$var wire 1 g/ d1 [27] $end
$var wire 1 h/ d1 [26] $end
$var wire 1 i/ d1 [25] $end
$var wire 1 j/ d1 [24] $end
$var wire 1 k/ d1 [23] $end
$var wire 1 l/ d1 [22] $end
$var wire 1 m/ d1 [21] $end
$var wire 1 n/ d1 [20] $end
$var wire 1 o/ d1 [19] $end
$var wire 1 p/ d1 [18] $end
$var wire 1 q/ d1 [17] $end
$var wire 1 r/ d1 [16] $end
$var wire 1 s/ d1 [15] $end
$var wire 1 t/ d1 [14] $end
$var wire 1 u/ d1 [13] $end
$var wire 1 v/ d1 [12] $end
$var wire 1 w/ d1 [11] $end
$var wire 1 x/ d1 [10] $end
$var wire 1 y/ d1 [9] $end
$var wire 1 z/ d1 [8] $end
$var wire 1 {/ d1 [7] $end
$var wire 1 |/ d1 [6] $end
$var wire 1 }/ d1 [5] $end
$var wire 1 ~/ d1 [4] $end
$var wire 1 !0 d1 [3] $end
$var wire 1 "0 d1 [2] $end
$var wire 1 #0 d1 [1] $end
$var wire 1 $0 d1 [0] $end
$var wire 1 %0 s $end
$var wire 1 &0 y [31] $end
$var wire 1 '0 y [30] $end
$var wire 1 (0 y [29] $end
$var wire 1 )0 y [28] $end
$var wire 1 *0 y [27] $end
$var wire 1 +0 y [26] $end
$var wire 1 ,0 y [25] $end
$var wire 1 -0 y [24] $end
$var wire 1 .0 y [23] $end
$var wire 1 /0 y [22] $end
$var wire 1 00 y [21] $end
$var wire 1 10 y [20] $end
$var wire 1 20 y [19] $end
$var wire 1 30 y [18] $end
$var wire 1 40 y [17] $end
$var wire 1 50 y [16] $end
$var wire 1 60 y [15] $end
$var wire 1 70 y [14] $end
$var wire 1 80 y [13] $end
$var wire 1 90 y [12] $end
$var wire 1 :0 y [11] $end
$var wire 1 ;0 y [10] $end
$var wire 1 <0 y [9] $end
$var wire 1 =0 y [8] $end
$var wire 1 >0 y [7] $end
$var wire 1 ?0 y [6] $end
$var wire 1 @0 y [5] $end
$var wire 1 A0 y [4] $end
$var wire 1 B0 y [3] $end
$var wire 1 C0 y [2] $end
$var wire 1 D0 y [1] $end
$var wire 1 E0 y [0] $end
$upscope $end
$scope module RF $end
$var wire 1 F0 clk $end
$var wire 1 G0 writeenable $end
$var wire 1 H0 reset $end
$var wire 1 I0 register1 [4] $end
$var wire 1 J0 register1 [3] $end
$var wire 1 K0 register1 [2] $end
$var wire 1 L0 register1 [1] $end
$var wire 1 M0 register1 [0] $end
$var wire 1 \1 register2 [4] $end
$var wire 1 ]1 register2 [3] $end
$var wire 1 ^1 register2 [2] $end
$var wire 1 _1 register2 [1] $end
$var wire 1 `1 register2 [0] $end
$var wire 1 g1 writeregister [4] $end
$var wire 1 h1 writeregister [3] $end
$var wire 1 i1 writeregister [2] $end
$var wire 1 j1 writeregister [1] $end
$var wire 1 k1 writeregister [0] $end
$var wire 1 O2 writedata [31] $end
$var wire 1 P2 writedata [30] $end
$var wire 1 Q2 writedata [29] $end
$var wire 1 R2 writedata [28] $end
$var wire 1 S2 writedata [27] $end
$var wire 1 T2 writedata [26] $end
$var wire 1 U2 writedata [25] $end
$var wire 1 V2 writedata [24] $end
$var wire 1 W2 writedata [23] $end
$var wire 1 X2 writedata [22] $end
$var wire 1 Y2 writedata [21] $end
$var wire 1 Z2 writedata [20] $end
$var wire 1 [2 writedata [19] $end
$var wire 1 \2 writedata [18] $end
$var wire 1 ]2 writedata [17] $end
$var wire 1 ^2 writedata [16] $end
$var wire 1 _2 writedata [15] $end
$var wire 1 `2 writedata [14] $end
$var wire 1 a2 writedata [13] $end
$var wire 1 b2 writedata [12] $end
$var wire 1 c2 writedata [11] $end
$var wire 1 d2 writedata [10] $end
$var wire 1 e2 writedata [9] $end
$var wire 1 f2 writedata [8] $end
$var wire 1 g2 writedata [7] $end
$var wire 1 h2 writedata [6] $end
$var wire 1 i2 writedata [5] $end
$var wire 1 j2 writedata [4] $end
$var wire 1 k2 writedata [3] $end
$var wire 1 l2 writedata [2] $end
$var wire 1 m2 writedata [1] $end
$var wire 1 n2 writedata [0] $end
$var wire 1 o2 data1 [31] $end
$var wire 1 p2 data1 [30] $end
$var wire 1 q2 data1 [29] $end
$var wire 1 r2 data1 [28] $end
$var wire 1 s2 data1 [27] $end
$var wire 1 t2 data1 [26] $end
$var wire 1 u2 data1 [25] $end
$var wire 1 v2 data1 [24] $end
$var wire 1 w2 data1 [23] $end
$var wire 1 x2 data1 [22] $end
$var wire 1 y2 data1 [21] $end
$var wire 1 z2 data1 [20] $end
$var wire 1 {2 data1 [19] $end
$var wire 1 |2 data1 [18] $end
$var wire 1 }2 data1 [17] $end
$var wire 1 ~2 data1 [16] $end
$var wire 1 !3 data1 [15] $end
$var wire 1 "3 data1 [14] $end
$var wire 1 #3 data1 [13] $end
$var wire 1 $3 data1 [12] $end
$var wire 1 %3 data1 [11] $end
$var wire 1 &3 data1 [10] $end
$var wire 1 '3 data1 [9] $end
$var wire 1 (3 data1 [8] $end
$var wire 1 )3 data1 [7] $end
$var wire 1 *3 data1 [6] $end
$var wire 1 +3 data1 [5] $end
$var wire 1 ,3 data1 [4] $end
$var wire 1 -3 data1 [3] $end
$var wire 1 .3 data1 [2] $end
$var wire 1 /3 data1 [1] $end
$var wire 1 03 data1 [0] $end
$var wire 1 .4 data2 [31] $end
$var wire 1 /4 data2 [30] $end
$var wire 1 04 data2 [29] $end
$var wire 1 14 data2 [28] $end
$var wire 1 24 data2 [27] $end
$var wire 1 34 data2 [26] $end
$var wire 1 44 data2 [25] $end
$var wire 1 54 data2 [24] $end
$var wire 1 64 data2 [23] $end
$var wire 1 74 data2 [22] $end
$var wire 1 84 data2 [21] $end
$var wire 1 94 data2 [20] $end
$var wire 1 :4 data2 [19] $end
$var wire 1 ;4 data2 [18] $end
$var wire 1 <4 data2 [17] $end
$var wire 1 =4 data2 [16] $end
$var wire 1 >4 data2 [15] $end
$var wire 1 ?4 data2 [14] $end
$var wire 1 @4 data2 [13] $end
$var wire 1 A4 data2 [12] $end
$var wire 1 B4 data2 [11] $end
$var wire 1 C4 data2 [10] $end
$var wire 1 D4 data2 [9] $end
$var wire 1 E4 data2 [8] $end
$var wire 1 F4 data2 [7] $end
$var wire 1 G4 data2 [6] $end
$var wire 1 H4 data2 [5] $end
$var wire 1 I4 data2 [4] $end
$var wire 1 J4 data2 [3] $end
$var wire 1 K4 data2 [2] $end
$var wire 1 L4 data2 [1] $end
$var wire 1 M4 data2 [0] $end
$var reg 1024 Z1 register [31:0] $end
$var integer 32 [1 i $end
$upscope $end
$scope module writeopmux $end
$var wire 1 \1 d0 [4] $end
$var wire 1 ]1 d0 [3] $end
$var wire 1 ^1 d0 [2] $end
$var wire 1 _1 d0 [1] $end
$var wire 1 `1 d0 [0] $end
$var wire 1 \3 d1 [4] $end
$var wire 1 ]3 d1 [3] $end
$var wire 1 ^3 d1 [2] $end
$var wire 1 _3 d1 [1] $end
$var wire 1 `3 d1 [0] $end
$var wire 1 f1 s $end
$var wire 1 g1 y [4] $end
$var wire 1 h1 y [3] $end
$var wire 1 i1 y [2] $end
$var wire 1 j1 y [1] $end
$var wire 1 k1 y [0] $end
$upscope $end
$scope module resultmux $end
$var wire 1 l1 d0 [31] $end
$var wire 1 m1 d0 [30] $end
$var wire 1 n1 d0 [29] $end
$var wire 1 o1 d0 [28] $end
$var wire 1 p1 d0 [27] $end
$var wire 1 q1 d0 [26] $end
$var wire 1 r1 d0 [25] $end
$var wire 1 s1 d0 [24] $end
$var wire 1 t1 d0 [23] $end
$var wire 1 u1 d0 [22] $end
$var wire 1 v1 d0 [21] $end
$var wire 1 w1 d0 [20] $end
$var wire 1 x1 d0 [19] $end
$var wire 1 y1 d0 [18] $end
$var wire 1 z1 d0 [17] $end
$var wire 1 {1 d0 [16] $end
$var wire 1 |1 d0 [15] $end
$var wire 1 }1 d0 [14] $end
$var wire 1 ~1 d0 [13] $end
$var wire 1 !2 d0 [12] $end
$var wire 1 "2 d0 [11] $end
$var wire 1 #2 d0 [10] $end
$var wire 1 $2 d0 [9] $end
$var wire 1 %2 d0 [8] $end
$var wire 1 &2 d0 [7] $end
$var wire 1 '2 d0 [6] $end
$var wire 1 (2 d0 [5] $end
$var wire 1 )2 d0 [4] $end
$var wire 1 *2 d0 [3] $end
$var wire 1 +2 d0 [2] $end
$var wire 1 ,2 d0 [1] $end
$var wire 1 -2 d0 [0] $end
$var wire 1 .2 d1 [31] $end
$var wire 1 /2 d1 [30] $end
$var wire 1 02 d1 [29] $end
$var wire 1 12 d1 [28] $end
$var wire 1 22 d1 [27] $end
$var wire 1 32 d1 [26] $end
$var wire 1 42 d1 [25] $end
$var wire 1 52 d1 [24] $end
$var wire 1 62 d1 [23] $end
$var wire 1 72 d1 [22] $end
$var wire 1 82 d1 [21] $end
$var wire 1 92 d1 [20] $end
$var wire 1 :2 d1 [19] $end
$var wire 1 ;2 d1 [18] $end
$var wire 1 <2 d1 [17] $end
$var wire 1 =2 d1 [16] $end
$var wire 1 >2 d1 [15] $end
$var wire 1 ?2 d1 [14] $end
$var wire 1 @2 d1 [13] $end
$var wire 1 A2 d1 [12] $end
$var wire 1 B2 d1 [11] $end
$var wire 1 C2 d1 [10] $end
$var wire 1 D2 d1 [9] $end
$var wire 1 E2 d1 [8] $end
$var wire 1 F2 d1 [7] $end
$var wire 1 G2 d1 [6] $end
$var wire 1 H2 d1 [5] $end
$var wire 1 I2 d1 [4] $end
$var wire 1 J2 d1 [3] $end
$var wire 1 K2 d1 [2] $end
$var wire 1 L2 d1 [1] $end
$var wire 1 M2 d1 [0] $end
$var wire 1 N2 s $end
$var wire 1 O2 y [31] $end
$var wire 1 P2 y [30] $end
$var wire 1 Q2 y [29] $end
$var wire 1 R2 y [28] $end
$var wire 1 S2 y [27] $end
$var wire 1 T2 y [26] $end
$var wire 1 U2 y [25] $end
$var wire 1 V2 y [24] $end
$var wire 1 W2 y [23] $end
$var wire 1 X2 y [22] $end
$var wire 1 Y2 y [21] $end
$var wire 1 Z2 y [20] $end
$var wire 1 [2 y [19] $end
$var wire 1 \2 y [18] $end
$var wire 1 ]2 y [17] $end
$var wire 1 ^2 y [16] $end
$var wire 1 _2 y [15] $end
$var wire 1 `2 y [14] $end
$var wire 1 a2 y [13] $end
$var wire 1 b2 y [12] $end
$var wire 1 c2 y [11] $end
$var wire 1 d2 y [10] $end
$var wire 1 e2 y [9] $end
$var wire 1 f2 y [8] $end
$var wire 1 g2 y [7] $end
$var wire 1 h2 y [6] $end
$var wire 1 i2 y [5] $end
$var wire 1 j2 y [4] $end
$var wire 1 k2 y [3] $end
$var wire 1 l2 y [2] $end
$var wire 1 m2 y [1] $end
$var wire 1 n2 y [0] $end
$upscope $end
$scope module alucomp $end
$var wire 1 o2 a [31] $end
$var wire 1 p2 a [30] $end
$var wire 1 q2 a [29] $end
$var wire 1 r2 a [28] $end
$var wire 1 s2 a [27] $end
$var wire 1 t2 a [26] $end
$var wire 1 u2 a [25] $end
$var wire 1 v2 a [24] $end
$var wire 1 w2 a [23] $end
$var wire 1 x2 a [22] $end
$var wire 1 y2 a [21] $end
$var wire 1 z2 a [20] $end
$var wire 1 {2 a [19] $end
$var wire 1 |2 a [18] $end
$var wire 1 }2 a [17] $end
$var wire 1 ~2 a [16] $end
$var wire 1 !3 a [15] $end
$var wire 1 "3 a [14] $end
$var wire 1 #3 a [13] $end
$var wire 1 $3 a [12] $end
$var wire 1 %3 a [11] $end
$var wire 1 &3 a [10] $end
$var wire 1 '3 a [9] $end
$var wire 1 (3 a [8] $end
$var wire 1 )3 a [7] $end
$var wire 1 *3 a [6] $end
$var wire 1 +3 a [5] $end
$var wire 1 ,3 a [4] $end
$var wire 1 -3 a [3] $end
$var wire 1 .3 a [2] $end
$var wire 1 /3 a [1] $end
$var wire 1 03 a [0] $end
$var wire 1 o4 b [31] $end
$var wire 1 p4 b [30] $end
$var wire 1 q4 b [29] $end
$var wire 1 r4 b [28] $end
$var wire 1 s4 b [27] $end
$var wire 1 t4 b [26] $end
$var wire 1 u4 b [25] $end
$var wire 1 v4 b [24] $end
$var wire 1 w4 b [23] $end
$var wire 1 x4 b [22] $end
$var wire 1 y4 b [21] $end
$var wire 1 z4 b [20] $end
$var wire 1 {4 b [19] $end
$var wire 1 |4 b [18] $end
$var wire 1 }4 b [17] $end
$var wire 1 ~4 b [16] $end
$var wire 1 !5 b [15] $end
$var wire 1 "5 b [14] $end
$var wire 1 #5 b [13] $end
$var wire 1 $5 b [12] $end
$var wire 1 %5 b [11] $end
$var wire 1 &5 b [10] $end
$var wire 1 '5 b [9] $end
$var wire 1 (5 b [8] $end
$var wire 1 )5 b [7] $end
$var wire 1 *5 b [6] $end
$var wire 1 +5 b [5] $end
$var wire 1 ,5 b [4] $end
$var wire 1 -5 b [3] $end
$var wire 1 .5 b [2] $end
$var wire 1 /5 b [1] $end
$var wire 1 05 b [0] $end
$var wire 1 Q3 func [3] $end
$var wire 1 R3 func [2] $end
$var wire 1 S3 func [1] $end
$var wire 1 T3 func [0] $end
$var wire 1 a3 shamt [4] $end
$var wire 1 b3 shamt [3] $end
$var wire 1 c3 shamt [2] $end
$var wire 1 d3 shamt [1] $end
$var wire 1 e3 shamt [0] $end
$var reg 32 Z3 y [31:0] $end
$var reg 1 [3 zero $end
$upscope $end
$scope module immextention $end
$var wire 1 \3 a [15] $end
$var wire 1 ]3 a [14] $end
$var wire 1 ^3 a [13] $end
$var wire 1 _3 a [12] $end
$var wire 1 `3 a [11] $end
$var wire 1 a3 a [10] $end
$var wire 1 b3 a [9] $end
$var wire 1 c3 a [8] $end
$var wire 1 d3 a [7] $end
$var wire 1 e3 a [6] $end
$var wire 1 f3 a [5] $end
$var wire 1 g3 a [4] $end
$var wire 1 h3 a [3] $end
$var wire 1 i3 a [2] $end
$var wire 1 j3 a [1] $end
$var wire 1 k3 a [0] $end
$var wire 1 N4 y [31] $end
$var wire 1 O4 y [30] $end
$var wire 1 P4 y [29] $end
$var wire 1 Q4 y [28] $end
$var wire 1 R4 y [27] $end
$var wire 1 S4 y [26] $end
$var wire 1 T4 y [25] $end
$var wire 1 U4 y [24] $end
$var wire 1 V4 y [23] $end
$var wire 1 W4 y [22] $end
$var wire 1 X4 y [21] $end
$var wire 1 Y4 y [20] $end
$var wire 1 Z4 y [19] $end
$var wire 1 [4 y [18] $end
$var wire 1 \4 y [17] $end
$var wire 1 ]4 y [16] $end
$var wire 1 ^4 y [15] $end
$var wire 1 _4 y [14] $end
$var wire 1 `4 y [13] $end
$var wire 1 a4 y [12] $end
$var wire 1 b4 y [11] $end
$var wire 1 c4 y [10] $end
$var wire 1 d4 y [9] $end
$var wire 1 e4 y [8] $end
$var wire 1 f4 y [7] $end
$var wire 1 g4 y [6] $end
$var wire 1 h4 y [5] $end
$var wire 1 i4 y [4] $end
$var wire 1 j4 y [3] $end
$var wire 1 k4 y [2] $end
$var wire 1 l4 y [1] $end
$var wire 1 m4 y [0] $end
$upscope $end
$scope module aluop2sel $end
$var wire 1 .4 d0 [31] $end
$var wire 1 /4 d0 [30] $end
$var wire 1 04 d0 [29] $end
$var wire 1 14 d0 [28] $end
$var wire 1 24 d0 [27] $end
$var wire 1 34 d0 [26] $end
$var wire 1 44 d0 [25] $end
$var wire 1 54 d0 [24] $end
$var wire 1 64 d0 [23] $end
$var wire 1 74 d0 [22] $end
$var wire 1 84 d0 [21] $end
$var wire 1 94 d0 [20] $end
$var wire 1 :4 d0 [19] $end
$var wire 1 ;4 d0 [18] $end
$var wire 1 <4 d0 [17] $end
$var wire 1 =4 d0 [16] $end
$var wire 1 >4 d0 [15] $end
$var wire 1 ?4 d0 [14] $end
$var wire 1 @4 d0 [13] $end
$var wire 1 A4 d0 [12] $end
$var wire 1 B4 d0 [11] $end
$var wire 1 C4 d0 [10] $end
$var wire 1 D4 d0 [9] $end
$var wire 1 E4 d0 [8] $end
$var wire 1 F4 d0 [7] $end
$var wire 1 G4 d0 [6] $end
$var wire 1 H4 d0 [5] $end
$var wire 1 I4 d0 [4] $end
$var wire 1 J4 d0 [3] $end
$var wire 1 K4 d0 [2] $end
$var wire 1 L4 d0 [1] $end
$var wire 1 M4 d0 [0] $end
$var wire 1 N4 d1 [31] $end
$var wire 1 O4 d1 [30] $end
$var wire 1 P4 d1 [29] $end
$var wire 1 Q4 d1 [28] $end
$var wire 1 R4 d1 [27] $end
$var wire 1 S4 d1 [26] $end
$var wire 1 T4 d1 [25] $end
$var wire 1 U4 d1 [24] $end
$var wire 1 V4 d1 [23] $end
$var wire 1 W4 d1 [22] $end
$var wire 1 X4 d1 [21] $end
$var wire 1 Y4 d1 [20] $end
$var wire 1 Z4 d1 [19] $end
$var wire 1 [4 d1 [18] $end
$var wire 1 \4 d1 [17] $end
$var wire 1 ]4 d1 [16] $end
$var wire 1 ^4 d1 [15] $end
$var wire 1 _4 d1 [14] $end
$var wire 1 `4 d1 [13] $end
$var wire 1 a4 d1 [12] $end
$var wire 1 b4 d1 [11] $end
$var wire 1 c4 d1 [10] $end
$var wire 1 d4 d1 [9] $end
$var wire 1 e4 d1 [8] $end
$var wire 1 f4 d1 [7] $end
$var wire 1 g4 d1 [6] $end
$var wire 1 h4 d1 [5] $end
$var wire 1 i4 d1 [4] $end
$var wire 1 j4 d1 [3] $end
$var wire 1 k4 d1 [2] $end
$var wire 1 l4 d1 [1] $end
$var wire 1 m4 d1 [0] $end
$var wire 1 n4 s $end
$var wire 1 o4 y [31] $end
$var wire 1 p4 y [30] $end
$var wire 1 q4 y [29] $end
$var wire 1 r4 y [28] $end
$var wire 1 s4 y [27] $end
$var wire 1 t4 y [26] $end
$var wire 1 u4 y [25] $end
$var wire 1 v4 y [24] $end
$var wire 1 w4 y [23] $end
$var wire 1 x4 y [22] $end
$var wire 1 y4 y [21] $end
$var wire 1 z4 y [20] $end
$var wire 1 {4 y [19] $end
$var wire 1 |4 y [18] $end
$var wire 1 }4 y [17] $end
$var wire 1 ~4 y [16] $end
$var wire 1 !5 y [15] $end
$var wire 1 "5 y [14] $end
$var wire 1 #5 y [13] $end
$var wire 1 $5 y [12] $end
$var wire 1 %5 y [11] $end
$var wire 1 &5 y [10] $end
$var wire 1 '5 y [9] $end
$var wire 1 (5 y [8] $end
$var wire 1 )5 y [7] $end
$var wire 1 *5 y [6] $end
$var wire 1 +5 y [5] $end
$var wire 1 ,5 y [4] $end
$var wire 1 -5 y [3] $end
$var wire 1 .5 y [2] $end
$var wire 1 /5 y [1] $end
$var wire 1 05 y [0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xn4
0!
1"
xQ3
xd3
x_3
x\3
x`1
xk3
xg3
xf3
x`3
x]3
xb3
xj3
xc3
x^3
xh3
xi3
xe3
xa3
xN2
xp"
xb$
x%0
xG0
xo"
xT3
xS3
xR3
xf1
xK4
xH4
xL0
x%$
x\1
xJ0
xE4
xD4
xM4
xB4
x]1
xC4
x$$
x'$
x"$
x_1
xI4
x@4
x&$
xJ4
xG4
x^1
xM0
x?4
x>4
x<4
x;4
x=4
x:4
xF4
xL4
x94
xI0
x#$
xK0
xA4
x"*
x'*
x1*
x04
xT*
x74
xE*
xr*
xw*
x6*
x#+
xJ*
x(+
x-+
x14
x/4
x24
xv)
x{)
x64
x,*
x44
x;*
xY*
x|*
x2+
x@*
x54
x84
x34
x.4
xO*
x^*
xh*
xm*
xc*
xH2
xI2
xB2
x>2
xC2
x<2
x62
x?2
x7+
x=2
x;2
xF+
xD2
x92
x82
x72
xA+
x32
x12
x@2
xJ2
xG2
xA2
xK+
xK2
x:2
xF2
x<+
x52
xM2
xP+
xL2
x42
xU+
x22
xE2
x$2
xw1
xu1
xs1
xq1
xp1
xo1
x-2
x%2
x!2
x*2
xv1
xt1
xn1
xm1
xl1
xE0
x.2
x02
x(2
x|1
x{1
x,2
x)2
x#2
x"2
xz1
xx1
xy1
x'2
x}1
xr1
x+2
x&2
x~1
x/2
bx
xd"
xe"
xf"
xg"
xh"
xi"
bx j"
bx k"
xl"
xm"
bx S#
bx T#
x-0
x@0
x,0
x?0
x60
xD0
x40
x;0
x:0
x90
x70
x*0
x00
x)0
x(0
x.0
xB0
xC0
x>0
x80
xA0
x20
x/0
x'0
x&0
xb/
x=0
x+0
xa/
x`/
x_/
x^/
x50
x10
x<0
x30
xQ/
xT/
xN/
xS/
xH/
x$0
x~/
x}/
x|/
xD/
xZ/
xU/
xP/
xJ/
xV/
xR/
xI/
xz/
xL/
xE/
x\/
x{/
xM/
xY/
xG/
xK/
xF/
x#0
x]/
x!0
xC/
x"0
xX/
x[/
xO/
xW/
xk4
xp/
xj4
xo/
xi4
xt/
xc/
xh4
xf4
xd4
xc4
xb4
xx/
xg/
xg4
xa4
xr/
xs/
xn/
xu/
xq/
xi/
xy/
xh/
xl/
xd/
xm4
xe4
xv/
xk/
xm/
xe/
xw/
xf/
xl4
xj/
0_-
xX4
x]4
xx-
x$.
x).
xn-
x..
xW4
x3.
x8.
xY4
x\4
x=.
xB.
xG.
xZ4
xL.
xQ.
xP4
0d-
x`4
xS4
xV4
xO4
xN4
xi-
x[4
x^4
xU4
xs-
x}-
xT4
x_4
xQ4
xR4
xQ2
x,3
x+3
xy.
xn2
x(3
xg2
xc2
x$3
x#3
x"3
xX2
x!3
x~2
xV2
x//
xh2
xW2
xt.
xO2
xm2
x03
x[.
xj2
xZ2
xo.
xi2
x^2
xe2
xT2
xP2
x~.
xk2
x>/
x_2
xV.
xb2
x]2
xU2
xl2
x/3
x`.
xd2
x`2
xS2
x)3
x'3
x.3
x%/
x-3
x[2
x&3
xY2
xa2
x4/
x\2
x*3
xe.
x9/
xR2
x%3
xf2
xj.
x*/
xv2
x|2
xz2
xy2
x{2
xw2
x}2
xx2
0w)
0|)
1#*
02*
xr2
xy4
07*
0<*
0(*
0F*
x}4
0-*
xt4
0K*
xz4
xs4
xh1
0A*
xt2
xj1
0Z*
0d*
0i*
x#5
x-5
0n*
0s*
0x*
x%5
x{4
xr4
x|4
0P*
xw4
x+5
x~4
0_*
xq4
xo2
x/5
x.5
x$5
xo4
x(5
xx4
xi1
0U*
xv4
xk1
xg1
xq2
x'5
x05
xp2
xs2
x*5
x)5
x!5
xu2
x"5
xu4
x,5
x&5
xp4
0.+
0=+
0)+
03+
08+
0B+
0}*
0$+
xt*
x0.
x&.
x/+
xM+
x:.
xS.
xX.
xb.
xl.
x5.
xv.
xC+
x{.
x'/
xX+
0a-
xI.
xp-
xu-
x3*
x})
x=*
xy*
x4+
xH+
xN.
x"/
xG*
xR+
x!.
xB*
x*+
x)*
xV*
x>+
x.*
xz-
x?.
x9+
0G+
0L+
xk-
x[*
xQ*
xL*
xo*
xW+
x].
xg.
xq.
0x)
xD.
xj*
xe*
x%+
x$*
0Q+
x8*
xf-
x`*
x~*
0V+
x+.
xA/
x6/
x1/
x,/
x;/
x@/
bx R(
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx Z1
b100000 [1
bx Z3
x[3
0F0
1H0
$end
#50000
1n4
1!
0Q3
0d3
0_3
0\3
0`1
1k3
0g3
0f3
0`3
0]3
0b3
0j3
0c3
0^3
0h3
1i3
0e3
0a3
0N2
0p"
0b$
0%0
1G0
0o"
0T3
0S3
0R3
0f1
0K4
0H4
0L0
0%$
0\1
0J0
0E4
0D4
0M4
0B4
0]1
0C4
1$$
0'$
0"$
1_1
0I4
0@4
0&$
0J4
0G4
0^1
0M0
0?4
0>4
0<4
0;4
0=4
0:4
0F4
0L4
094
0I0
0#$
0K0
0A4
0"*
0'*
01*
004
0T*
074
0E*
0r*
0w*
06*
0#+
0J*
0(+
0-+
014
0/4
024
0v)
0{)
064
0,*
044
0;*
0Y*
0|*
02+
0@*
054
084
034
0.4
0O*
0^*
0h*
0m*
0c*
07+
0F+
0A+
0K+
0<+
0P+
0U+
0$2
0w1
0u1
0s1
0q1
0p1
0o1
1-2
0%2
0!2
0*2
0v1
0t1
0n1
0m1
0l1
0E0
0(2
0|1
0{1
0,2
0)2
0#2
0"2
0z1
0x1
0y1
0'2
0}1
0r1
1+2
0&2
0~1
0d"
0e"
1f"
0g"
1h"
0i"
b0 j"
b10100000 k"
0l"
0m"
0-0
0@0
0,0
0?0
060
0D0
040
0;0
0:0
090
070
0*0
000
0)0
0(0
0.0
0B0
1C0
0>0
080
0A0
020
0/0
0'0
0&0
0b/
0=0
0+0
0a/
1`/
0_/
0^/
050
010
0<0
030
0Q/
0T/
0N/
0S/
0H/
0$0
1~/
0}/
0|/
0D/
0Z/
0U/
0P/
0J/
0V/
0R/
0I/
0z/
0L/
0E/
0\/
0{/
0M/
0Y/
0G/
0K/
0F/
0#0
0]/
1!0
0C/
0"0
0X/
0[/
0O/
0W/
1k4
0p/
0j4
0o/
0i4
0t/
0c/
0h4
0f4
0d4
0c4
0b4
0x/
0g/
0g4
0a4
0r/
0s/
0n/
0u/
0q/
0i/
0y/
0h/
0l/
0d/
1m4
0e4
0v/
0k/
0m/
0e/
0w/
0f/
0l4
0j/
0X4
0]4
0x-
0$.
0).
0n-
0..
0W4
03.
08.
0Y4
0\4
0=.
0B.
0G.
0Z4
0L.
0Q.
0P4
0`4
0S4
0V4
0O4
0N4
1i-
0[4
0^4
0U4
1s-
0}-
0T4
0_4
0Q4
0R4
0Q2
0,3
0+3
0y.
1n2
0(3
0g2
0c2
0$3
0#3
0"3
0X2
0!3
0~2
0V2
0//
0h2
0W2
0t.
0O2
0m2
003
0[.
0j2
0Z2
0o.
0i2
0^2
0e2
0T2
0P2
0~.
0k2
0>/
0_2
0V.
0b2
0]2
0U2
1l2
0/3
0`.
0d2
0`2
0S2
0)3
0'3
0.3
0%/
0-3
0[2
0&3
0Y2
0a2
04/
0\2
0*3
0e.
09/
0R2
0%3
0f2
0j.
0*/
0v2
0|2
0z2
0y2
0{2
0w2
0}2
0x2
0r2
0y4
0}4
0t4
0z4
0s4
0h1
0t2
1j1
0#5
0-5
0%5
0{4
0r4
0|4
0w4
0+5
0~4
0q4
0o2
0/5
1.5
0$5
0o4
0(5
0x4
0i1
0v4
0k1
0g1
0q2
0'5
105
0p2
0s2
0*5
0)5
0!5
0u2
0"5
0u4
0,5
0&5
0p4
0t*
00.
0&.
0/+
0M+
0:.
0S.
0X.
0b.
0l.
05.
0v.
0C+
0{.
0'/
0X+
0I.
1p-
0u-
03*
0})
0=*
0y*
04+
0H+
0N.
0"/
0G*
0R+
0!.
0B*
0*+
0)*
0V*
0>+
0.*
0z-
0?.
09+
0k-
0[*
0Q*
0L*
0o*
0W+
0].
0g.
0q.
0D.
0j*
0e*
0%+
0$*
08*
0f-
0`*
0~*
0+.
0A/
06/
01/
0,/
0;/
0@/
b0 R(
b0 Z1
b100000 [1
b101 Z3
0[3
1F0
#100000
0!
0"
0F0
0H0
#150000
1!
1`1
0k3
1h3
0K4
0M4
1"*
0-2
1*2
1B0
0C0
0`/
1_/
1}/
0"0
1j4
0m4
1x-
0i-
0n2
1k2
1-5
1k1
005
0p-
1)*
b100 R(
b1010000000000000000000000000000000000000000000000000000000000000000 Z1
b1100 Z3
1F0
#200000
0!
0F0
#250000
1!
1d3
1_3
1\3
1k3
1g3
1f3
1`3
1]3
1b3
1j3
1c3
1^3
0h3
1e3
1a3
0K4
1L0
0J4
1^1
1M0
0"*
1'*
1-2
0*2
1,2
0+2
1C0
1`/
0~/
1}/
1|/
1z/
1{/
0"0
1p/
0j4
1o/
1i4
1t/
1c/
1h4
1f4
1d4
1c4
1b4
1x/
1g/
1g4
1a4
1r/
1s/
1n/
1u/
1q/
1i/
1y/
1h/
1l/
1d/
1m4
1e4
1v/
1k/
1m/
1e/
1w/
1f/
1l4
1j/
1X4
1]4
0x-
1$.
1).
1n-
1..
1W4
13.
18.
1Y4
1\4
1=.
1B.
1G.
1Z4
1L.
1Q.
1P4
1`4
1S4
1V4
1O4
1N4
1i-
1[4
1^4
1U4
1}-
1T4
1_4
1Q4
1R4
1y.
1n2
1//
1t.
1m2
1[.
1o.
1~.
0k2
1>/
1V.
0l2
1`.
1.3
1%/
1-3
14/
1e.
19/
1j.
1*/
1y4
1}4
1t4
1z4
1s4
1#5
0-5
1%5
1{4
1r4
1|4
1w4
1+5
1~4
1q4
1/5
1$5
1o4
1(5
1x4
1i1
1v4
1'5
105
1*5
1)5
1!5
1"5
1u4
1,5
1&5
1p4
1p-
1u-
0)*
1z-
b1000 R(
b1100000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000 Z1
b11 Z3
1F0
#300000
0!
0F0
#350000
0n4
1!
0d3
0_3
0\3
0`1
0g3
0`3
0]3
0b3
0j3
0c3
0e3
0a3
1T3
1S3
1f1
1K4
1M4
0$$
0^1
0L4
1K0
1"*
1-2
0*2
0(2
1,2
1+2
0~1
0f"
1g"
b11 j"
b11000000 k"
0B0
0C0
1A0
0`/
0_/
1^/
0|/
0z/
0!0
1"0
0p/
0o/
0i4
0t/
0c/
0f4
0d4
0c4
0b4
0x/
0g/
0g4
0a4
0r/
0n/
0u/
0q/
0i/
0y/
0h/
0l/
0d/
0e4
0v/
0k/
0m/
0e/
0w/
0f/
0l4
0j/
0X4
0]4
0).
0n-
0..
0W4
03.
08.
0Y4
0\4
0=.
0B.
0G.
0Z4
0Q.
0P4
0S4
0V4
0O4
0N4
0[4
0^4
0U4
0}-
0T4
0_4
0Q4
0R4
0y.
1n2
0//
0t.
1m2
103
0[.
0o.
0i2
0~.
0k2
0>/
0V.
1l2
1/3
0`.
0.3
0%/
0-3
0a2
04/
0e.
09/
0j.
0*/
0y4
0}4
0t4
0z4
0s4
0j1
0#5
0%5
0{4
0r4
0|4
0w4
0+5
0~4
0q4
0/5
0$5
0o4
0(5
0x4
1i1
0v4
0k1
0'5
0*5
0)5
0!5
0"5
0u4
0,5
0&5
0p4
0p-
0u-
1)*
1.*
b1100 R(
b1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000 Z1
b111 Z3
1F0
#400000
0!
0F0
#450000
1!
0k3
1`3
0T3
0_1
1^1
1L4
0K0
0"*
0'*
1,*
0-2
0*2
0,2
b10 j"
1C0
1`/
0!0
1"0
1b4
1u/
0m4
1B.
0i-
0n2
0m2
003
0k2
0/3
1.3
1-3
1/5
1k1
0p-
0)*
0.*
b10000 R(
b1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000001100000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000 Z1
b100 Z3
1F0
#500000
0!
0F0
#550000
1!
0i3
0S3
0L0
1K0
1"*
1-2
1*2
1,2
0+2
b0 j"
1B0
0C0
0`/
1_/
1~/
0}/
1!0
0"0
0k4
0s-
1n2
1m2
1k2
0l2
0-3
1)*
0z-
b10100 R(
b1100000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000011100000000000000000000000000001100000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000 Z1
b1011 Z3
1F0
#600000
0!
0F0
#650000
1!
1`1
0f3
0`3
1j3
0^3
1h3
0G0
1T3
0f1
0K4
1%$
1_1
0"*
1'*
0-2
1*2
0,2
0)2
0+2
0g"
0h"
b1 j"
b10000 k"
1l"
1C0
1`/
0~/
0}/
1|/
0{/
0!0
1"0
1j4
0h4
0b4
0s/
0u/
1l4
1x-
0$.
1n-
0B.
0L.
0`4
0n2
0m2
103
0j2
1k2
0l2
1/3
0.3
1-3
1j1
0.5
1i1
1k1
1u-
1!.
0)*
1z-
b11000 R(
b1100000000000000000000000000000000000000000000000000000000000010110000000000000000000000000000011100000000000000000000000000001100000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000 Z1
b1000 Z3
1F0
#700000
0!
0F0
#750000
1!
0`1
1f3
1^3
1G0
1f1
1K4
1L0
0%$
0_1
0K0
1"*
1-2
0*2
1+2
1g"
1h"
b11000000 k"
0l"
1@0
0B0
0C0
0A0
0`/
0_/
0^/
1{/
1]/
1!0
0"0
1h4
1s/
1$.
1L.
1`4
1n2
003
0k2
1l2
0/3
1.3
0j1
1.5
0k1
0u-
13*
1)*
1.*
0z-
b11100 R(
b101 Z3
1F0
#800000
0!
0F0
#850000
1!
1k3
0f3
0j3
0^3
0h3
0G0
0f1
0K4
0L0
1%$
0M4
0^1
0M0
0L4
1K0
0"*
0'*
11*
0,*
0,2
0g"
0h"
b10000 k"
1l"
1C0
1`/
1}/
0|/
0{/
0"0
0j4
0h4
0s/
1m4
0l4
0x-
0$.
0n-
0L.
0`4
1i-
0m2
103
0-3
0/5
0.5
0i1
005
1p-
03*
0!.
0)*
0.*
b100000 R(
b1100000000000000000000000000000000000000000000000000000000000010110000000000000000000000000000010100000000000000000000000000001100000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000 Z1
b101 Z3
1F0
#900000
0!
0F0
#950000
1n4
1!
1`1
0k3
1b$
1G0
0T3
0%$
1M4
1$$
1J4
1^1
1L4
0K0
1"*
0$2
0w1
0u1
0s1
0q1
0p1
0o1
0-2
0%2
0!2
0*2
0v1
0t1
0n1
0m1
0l1
0(2
0|1
0{1
0,2
0)2
0#2
0"2
0z1
0x1
0y1
0'2
0}1
0r1
0+2
0&2
0~1
1f"
1h"
b0 j"
b10100000 k"
0l"
1B0
0C0
0`/
1_/
0"0
0m4
0i-
0Q2
0n2
0g2
0c2
0X2
0V2
0h2
0W2
0O2
0m2
003
0j2
0Z2
0i2
0^2
0e2
0T2
0P2
0k2
0_2
0b2
0]2
0U2
0l2
0d2
0`2
0S2
0.3
0[2
0Y2
0a2
0\2
0R2
0f2
0-5
0/5
1i1
1k1
005
0p-
1)*
b100100 R(
b0 Z3
1[3
1F0
#1000000
0!
0F0
#1050000
0n4
1!
0`1
1f3
1j3
1^3
1h3
0b$
1f1
1K4
1L0
1M4
0$$
1_1
0J4
0^1
1M0
0L4
1K0
0"*
1'*
0-2
1*2
0(2
0+2
0~1
0f"
1g"
b11000000 k"
1C0
1`/
1~/
0}/
1|/
1{/
0!0
1"0
1j4
1h4
1s/
1l4
1x-
1$.
1n-
1L.
1`4
0n2
103
0i2
1k2
0l2
1/3
0a2
0j1
0#5
0-5
0+5
0/5
1.5
1i1
0k1
105
1u-
1!.
0)*
b101000 R(
b1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000001100000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000 Z1
b1000 Z3
0[3
1F0
#1100000
0!
0F0
#1150000
1!
1_3
1`1
1`3
0j3
0h3
0K4
0L0
0M4
0_1
1^1
0M0
1"*
0B0
0C0
1A0
0`/
0_/
1^/
1}/
0|/
0"0
0j4
1t/
1b4
1a4
1u/
0l4
0x-
0n-
1B.
1G.
003
0/3
1-3
1j1
0.5
1k1
005
0u-
0!.
1)*
1.*
b101100 R(
b1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001100000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000 Z1
1F0
#1200000
0!
0F0
#1250000
1!
0`1
1j3
1T3
1K4
1L0
1M4
1_1
0^1
1M0
0"*
0'*
1,*
1-2
0*2
1,2
0+2
b1 j"
1C0
1`/
1!0
1"0
1l4
1n-
1n2
1m2
0k2
0l2
1.5
105
0)*
0.*
b110000 R(
b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001100000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000 Z1
b11 Z3
1F0
#1300000
0!
0F0
#1350000
1n4
1!
0_3
1`1
0f3
0`3
0j3
0^3
1i3
1e3
0G0
1o"
0T3
0f1
0K4
1$$
1'$
1"$
1&$
1^1
1L4
0K0
1"*
0$2
0w1
0u1
0s1
0q1
0p1
0o1
0-2
0%2
0!2
0*2
0v1
0t1
0n1
0m1
0l1
0(2
0|1
0{1
0,2
1)2
0#2
0"2
0z1
0x1
0y1
1'2
0}1
0r1
0+2
0&2
0~1
1e"
1f"
0g"
0h"
b0 j"
b101000 k"
1B0
0C0
0`/
1_/
0~/
0}/
1|/
1z/
0{/
0"0
1k4
0t/
0h4
0b4
1g4
0a4
0s/
0u/
0l4
0$.
1).
0n-
0B.
0G.
0L.
0`4
1s-
0Q2
0n2
0g2
0c2
0X2
0V2
1h2
0W2
0O2
0m2
003
1j2
0Z2
0i2
0^2
0e2
0T2
0P2
0k2
0_2
0b2
0]2
0U2
0l2
0/3
0d2
0`2
0S2
1.3
1-3
0[2
0Y2
0a2
0\2
0R2
0f2
1j1
0/5
1.5
1i1
1k1
005
1*5
1!.
1)*
1z-
b110100 R(
b1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001100000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000 Z1
b1010000 Z3
1F0
#1400000
0!
0F0
#1450000
1!
0`1
1g3
0i3
1N2
1p"
1G0
0o"
1K4
0L0
0$$
0^1
0M0
0L4
0"*
1'*
1d"
0e"
1h"
1i"
b10100101 k"
bx00000000000000000000000000000011xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx T#
1C0
1`/
1~/
1}/
1|/
0{/
1"0
0k4
1i4
0s-
1}-
xQ2
xn2
xg2
xc2
xX2
xV2
xh2
xW2
xO2
xm2
xj2
xZ2
xi2
x^2
xe2
xT2
xP2
xk2
x_2
xb2
x]2
xU2
xl2
xd2
x`2
xS2
0.3
0-3
x[2
xY2
xa2
x\2
xR2
xf2
0.5
0i1
0k1
1,5
0&.
0!.
0)*
0z-
b111000 R(
1F0
#1500000
0!
0F0
#1550000
1!
1k3
0g3
0e3
0N2
0p"
xK4
xH4
xE4
xD4
xM4
xB4
xC4
1$$
0'$
0"$
xI4
x@4
0&$
xJ4
xG4
x?4
x>4
x<4
x;4
x=4
x:4
xF4
xL4
x94
xA4
1"*
x04
x74
x14
x/4
x24
x64
x44
x54
x84
x34
x.4
0H2
0I2
0B2
0>2
0C2
0<2
062
0?2
0=2
0;2
0D2
092
082
072
032
012
0@2
0J2
0G2
0A2
0K2
0:2
0F2
052
1M2
1L2
042
022
0E2
1-2
0.2
002
0)2
0'2
0/2
0d"
0i"
b10100000 k"
b11 S#
0@0
1?0
0B0
0C0
0A0
0`/
0_/
0^/
0~/
0}/
1|/
0z/
1\/
0]/
0!0
1"0
0i4
0g4
1m4
0).
1i-
0}-
0Q2
1n2
0g2
0c2
0X2
0V2
0h2
0W2
0O2
0m2
0j2
0Z2
0i2
0^2
0e2
0T2
0P2
0k2
0_2
0b2
0]2
0U2
0l2
0d2
0`2
0S2
0[2
0Y2
0a2
0\2
0R2
0f2
105
0*5
0,5
13*
1)*
1.*
18*
b111100 R(
b1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000000 Z1
b1 Z3
1F0
#1600000
0!
0F0
#1650000
1!
0k3
1g3
1i3
1e3
0G0
1o"
0K4
0H4
0E4
0D4
1M4
0B4
0C4
1'$
1"$
0I4
0@4
1&$
0J4
0G4
0?4
0>4
0<4
0;4
0=4
0:4
0F4
0L4
094
0A4
0"*
0'*
01*
004
074
16*
014
0/4
024
064
0,*
044
054
084
034
0.4
0-2
1)2
1'2
1+2
1e"
0h"
b101000 k"
1C0
1`/
1~/
0|/
1z/
1{/
0!0
1"0
1k4
1i4
1g4
0m4
1).
0i-
1s-
1}-
0n2
1h2
1j2
1l2
1.5
005
1*5
1,5
1&.
0p-
03*
0)*
0.*
08*
b1000000 R(
b1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001100000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000 Z1
b1010100 Z3
1F0
#1700000
0!
0F0
#1750000
xn4
1!
xd3
x_3
x\3
x`1
xk3
xg3
xf3
x`3
x]3
xb3
xj3
xc3
x^3
xh3
xi3
xe3
xa3
xN2
xp"
xb$
x%0
xG0
xo"
xf1
xK4
xH4
xL0
x%$
x\1
xJ0
xE4
xD4
xM4
xB4
x]1
xC4
x$$
x'$
x"$
x_1
xI4
x@4
x&$
xJ4
xG4
x^1
xM0
x?4
x>4
x<4
x;4
x=4
x:4
xF4
xL4
x94
xI0
x#$
xK0
xA4
1"*
x04
x74
x14
x/4
x24
x64
x44
x54
x84
x34
x.4
x$2
xw1
xu1
xs1
xq1
xp1
xo1
x-2
x%2
x!2
x*2
xv1
xt1
xn1
xm1
xl1
x(2
x|1
x{1
x,2
x)2
x#2
x"2
xz1
xx1
xy1
x'2
x}1
xr1
x+2
x&2
x~1
xd"
xe"
xf"
xg"
xh"
xi"
bx k"
xl"
xm"
bx00000000000000000000000000000001xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000000011xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx T#
x-0
x@0
x,0
x?0
x60
x40
x;0
x:0
x90
x70
x*0
x00
x)0
x(0
x.0
xB0
xC0
x>0
x80
xA0
x20
x/0
x'0
x&0
x=0
x+0
0`/
1_/
x50
x10
x<0
x30
x~/
x}/
x|/
xz/
x{/
x!0
x"0
xk4
xp/
xj4
xo/
xi4
xt/
xc/
xh4
xf4
xd4
xc4
xb4
xx/
xg/
xg4
xa4
xr/
xs/
xn/
xu/
xq/
xi/
xy/
xh/
xl/
xd/
xm4
xe4
xv/
xk/
xm/
xe/
xw/
xf/
xl4
xj/
xX4
x]4
xx-
x$.
x).
xn-
x..
xW4
x3.
x8.
xY4
x\4
x=.
xB.
xG.
xZ4
xL.
xQ.
xP4
x`4
xS4
xV4
xO4
xN4
xi-
x[4
x^4
xU4
xs-
x}-
xT4
x_4
xQ4
xR4
xQ2
x,3
x+3
xy.
xn2
x(3
xg2
xc2
x$3
x#3
x"3
xX2
x!3
x~2
xV2
x//
xh2
xW2
xt.
xO2
xm2
x03
x[.
xj2
xZ2
xo.
xi2
x^2
xe2
xT2
xP2
x~.
xk2
x>/
x_2
xV.
xb2
x]2
xU2
xl2
x/3
x`.
xd2
x`2
xS2
x)3
x'3
x.3
x%/
x-3
x[2
x&3
xY2
xa2
x4/
x\2
x*3
xe.
x9/
xR2
x%3
xf2
xj.
x*/
xv2
x|2
xz2
xy2
x{2
xw2
x}2
xx2
xr2
xy4
x}4
xt4
xz4
xs4
xh1
xt2
xj1
x#5
x-5
x%5
x{4
xr4
x|4
xw4
x+5
x~4
xq4
xo2
x/5
x.5
x$5
xo4
x(5
xx4
xi1
xv4
xk1
xg1
xq2
x'5
x05
xp2
xs2
x*5
x)5
x!5
xu2
x"5
xu4
x,5
x&5
xp4
x0.
x&.
x:.
xS.
xX.
xb.
xl.
x5.
xv.
x{.
x'/
xI.
xp-
xu-
xN.
x"/
x!.
1)*
xz-
x?.
x].
xg.
xq.
xD.
x+.
xA/
x6/
x1/
x,/
x;/
x@/
b1000100 R(
bx Z3
x[3
1F0
